[
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Psyc 2001 Syllabus",
    "section": "",
    "text": "This syllabus is the Fall 2023 syllabus. It may be revised across the semester to address course needs.\nFall 2023\nInstructor: Dr. Matthew Crump\nEmail: mcrump@brooklyn.cuny.edu"
  },
  {
    "objectID": "syllabus.html#bulletin-course-description",
    "href": "syllabus.html#bulletin-course-description",
    "title": "Psyc 2001 Syllabus",
    "section": "Bulletin Course Description",
    "text": "Bulletin Course Description\nPSYC 2001 Laboratory Experience\n3 hours; 3 credits\nMinimum of 9 hours conference and independent work; 3 credits Faculty-supervised independent research that includes data collection and analysis and/or theoretical work. Weekly conference. Final report must be submitted to the department.\nPrerequisite: Psychology 1000 and permission of the chairperson and sponsorship of a full-time faculty research mentor. Course application is required and can be obtained in the department office before registration.\nCourse objectives: develop the following skills in relation to content learning objectives in 2530:\n\n\n\n\n\n\n\nGoal\nLearning Outcome\n\n\n\n\n1. Exposure to computational techniques for experiment generation\nStudents will demonstrate ability to use HTML, Javascript and JsPsych to replicate designs in cognitive psychology\n\n\n2. Exposure to computational techniques for data-analysis\nStudents will demonstrate the ability to handle and analyze data from cognitive psychology experiments that they program\n\n\n3. Sharing and communication\nStudents will demonstrate ability to use platforms such as Github, R, Rstudio, and Quarto to communicate and disseminate results"
  },
  {
    "objectID": "syllabus.html#course-materials",
    "href": "syllabus.html#course-materials",
    "title": "Psyc 2001 Syllabus",
    "section": "Course Materials",
    "text": "Course Materials\nCourse materials will be available from this course website or shared via email.\nLink to the course website: https://www.crumplab.com/psyc2001/"
  },
  {
    "objectID": "syllabus.html#course-goals-and-structure",
    "href": "syllabus.html#course-goals-and-structure",
    "title": "Psyc 2001 Syllabus",
    "section": "Course goals and structure",
    "text": "Course goals and structure\nThis is a lab-based course. Students gain experience in the computational cognition lab on a weekly basis by learning a variety of skills relevant to conducting research in the lab. The focus this semester is learning how to program cognitive psychology experiments for the web using JsPsych. Additional goals include learning R, Rstudio, and Quarto as tools to help share research assets publicly and to make them reproducible.\nThere are 15 weeks in the course. We will meet on a weekly basis either in group meetings, or individual meetings."
  },
  {
    "objectID": "syllabus.html#course-schedule",
    "href": "syllabus.html#course-schedule",
    "title": "Psyc 2001 Syllabus",
    "section": "Course Schedule",
    "text": "Course Schedule\nThis is a rough schedule that will be modified as needed throughout the semester.\n\n\n\nWeek\nActivity/Goal\n\n\n\n\n1\nOrientation/Set-up Quarto blogs\n\n\n2\nBasic HTML and Javascript coding\n\n\n3\nJsPsych overview and Simple Reaction time task demo\n\n\n4\nProgramming a Stroop Experiment in JsPsych\n\n\n5\nAnalyzing data from a Stroop Experiment in R\n\n\n6\nProgramming a Recognition Memory Experiment in JsPsych\n\n\n7\nAnalyzing data from a Memory experiment in R\n\n\n8\nReplicating a classic cognitive experiment in Jspsych\n\n\n9\nChoosing your own experiment to replicate\n\n\n10\nIndependent Replication Implementation\n\n\n11\nIndependent Replication Implementation\n\n\n12\nPilot Data collection\n\n\n13\nIndependent Replication analysis\n\n\n14\nAdvanced topics/Presentations\n\n\n15\nAdvanced topics/Presentations"
  },
  {
    "objectID": "syllabus.html#assignments-and-grading",
    "href": "syllabus.html#assignments-and-grading",
    "title": "Psyc 2001 Syllabus",
    "section": "Assignments and Grading",
    "text": "Assignments and Grading\nStudents are expected to contribute their work to a quarto blog on a weekly basis. The expectations for each week will be discussed in class. At the end of the semester the blog is submitted as a lab journal providing a record of the laboratory experience."
  },
  {
    "objectID": "syllabus.html#course-policies",
    "href": "syllabus.html#course-policies",
    "title": "Psyc 2001 Syllabus",
    "section": "Course Policies",
    "text": "Course Policies\n\nChanges to the syllabus\nThe syllabus may be updated for clarity or to make adjustments for pedagogical purposes. The most current version of the syllabus is always available from the course website.\n\n\nMissing an Exam\nNote there are no exams in this course.\nIn the event of an emergency, contact me as soon as possible. If you are missing an exam for religious reasons refer to the state law regarding non-attendance because of religious beliefs noted in the front matter of the Undergraduate Bulletin and Graduate Bulletin. These may be found on the Academic Calendars, Course Schedules, and Bulletins page of the Registrar’s website. See also the student bereavement policy at http://www.brooklyn.cuny.edu/web/about/initiatives/policies/bereavement.php.\n\n\n\nAccessibility\nIn order to receive disability-related academic accommodations students must first be registered with the Center for Student Disability Services. Students who have a documented disability or suspect they may have a disability are invited to set up an appointment with the Director of the Center for Student Disability Services, at 718-951-5538. If you have already registered with the Center for Student Disability Services, please provide your professor with the course accommodation form and discuss your specific accommodation with him/her.\n\n\n\nGeneral Help with Research and Writing\nThe Library maintains a collection of links to sites that can assist you with proper citation format and paraphrasing and quoting other authors at Research & Writing Help. The Learning Center has writing tutors available to help you with your writing http://lc.brooklyn.cuny.edu/.\nThe best learning is done in conversation with others, whether they are people—classmates, teachers, friends—or texts—books, articles, essays, poems, films etc. It should not be a solitary process. However, the assignments that you hand in for this course must be done on your own, should represent your own thinking, and should be original work that you have done for this particular course. A good way to balance these two seemingly contradictory approaches (collaborative learning and original individually-produced work) without knowingly—or, even unwittingly—resorting to plagiarism or other forms of academic misconduct is to learn and meticulously observe the rules for citing the work of others (this could be the great point your roommate made that you used in your paper, it could be a well-turned phrase from an academic essay, or it could be anything in between). It is your responsibility to learn what constitutes plagiarism and the correct rules for citing sources—read the information on the following website carefully: http://www.brooklyn.cuny.edu/bc/policies/. The bottom line is: passing off anyone’s words or ideas as your own for any reason whatsoever is plagiarism."
  },
  {
    "objectID": "syllabus.html#sec-integrity",
    "href": "syllabus.html#sec-integrity",
    "title": "Psyc 2001 Syllabus",
    "section": "Violations of Academic integrity",
    "text": "Violations of Academic integrity\nIt is the responsibility of each student to understand and act in accordance with the University’s policy on Academic Integrity, described below.\n\nUniversity’s policy on Academic Integrity\nThe faculty and administration of Brooklyn College support an environment free from cheating and plagiarism. Each student is responsible for being aware of what constitutes cheating and plagiarism and for avoiding both. The complete text of the CUNY Academic Integrity Policy and the Brooklyn College procedure for implementing that policy can be found at this site. If a faculty member suspects a violation of academic integrity and, upon investigation, confirms that violation, or if the student admits the violation, the faculty member MUST report the violation."
  },
  {
    "objectID": "syllabus.html#the-rights-of-undocumented-students",
    "href": "syllabus.html#the-rights-of-undocumented-students",
    "title": "Psyc 2001 Syllabus",
    "section": "The Rights of Undocumented Students",
    "text": "The Rights of Undocumented Students\nAs an educator, I support the rights of undocumented students to an education. For resources and support, please visit Brooklyn College’s Immigrant Student Support Office located at 117 Roosevelt Hall. You can also contact them via email at ISSO@brooklyn.cuny.edu or via phone at 718-951-5023."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PSYC 2001: Laboratory Experience",
    "section": "",
    "text": "Instructor: Matthew Crump\nTerm: Fall 2023, Brooklyn College of CUNY\nEmail: mcrump@brooklyn.cuny.edu\nThis course website contains resources that we will use throughout the semester to learn JsPsych for programming cognitive psychology experiments. This website is also built using quarto and hosted using Github Pages. The source code for this website can be copied and/or used an example for your own blogs and websites for this course."
  },
  {
    "objectID": "blog/6_picture_memory/index.html",
    "href": "blog/6_picture_memory/index.html",
    "title": "Week 6: Picture memory",
    "section": "",
    "text": "Pre-requisites:\nHave followed along from the previous posts."
  },
  {
    "objectID": "blog/6_picture_memory/index.html#screencast",
    "href": "blog/6_picture_memory/index.html#screencast",
    "title": "Week 6: Picture memory",
    "section": "Screencast",
    "text": "Screencast"
  },
  {
    "objectID": "blog/6_picture_memory/index.html#concepts-to-cover",
    "href": "blog/6_picture_memory/index.html#concepts-to-cover",
    "title": "Week 6: Picture memory",
    "section": "Concepts to cover",
    "text": "Concepts to cover\nI’ll cover the following concepts in the screencast and show how I am using software as I go along.\n\nPotter, M. C., & Levy, E. I. (1969). Recognition memory for a rapid sequence of pictures. Journal of Experimental Psychology, 81(1), 10.\nProgramming a version of the experiment in jsPsych"
  },
  {
    "objectID": "blog/6_picture_memory/index.html#demo-experiment",
    "href": "blog/6_picture_memory/index.html#demo-experiment",
    "title": "Week 6: Picture memory",
    "section": "Demo Experiment",
    "text": "Demo Experiment\nlink to experiment"
  },
  {
    "objectID": "blog/6_picture_memory/index.html#assignment",
    "href": "blog/6_picture_memory/index.html#assignment",
    "title": "Week 6: Picture memory",
    "section": "Assignment",
    "text": "Assignment\n\nObtain the sample code from the tutorial and images. Demonstrate that you can get the experiment running on your blog.\nAttempt to program a different manipulation that you think would influence recognition memory for pictures."
  },
  {
    "objectID": "blog/4_stroop/index.html",
    "href": "blog/4_stroop/index.html",
    "title": "Week 4: Programming a Stroop experiment in JsPsych",
    "section": "",
    "text": "Pre-requisites:\nHave followed along from the previous posts."
  },
  {
    "objectID": "blog/4_stroop/index.html#part-1-basic-stroop",
    "href": "blog/4_stroop/index.html#part-1-basic-stroop",
    "title": "Week 4: Programming a Stroop experiment in JsPsych",
    "section": "Part 1: Basic Stroop",
    "text": "Part 1: Basic Stroop"
  },
  {
    "objectID": "blog/4_stroop/index.html#part-2-using-a-script-to-generate-a-stimulus-array",
    "href": "blog/4_stroop/index.html#part-2-using-a-script-to-generate-a-stimulus-array",
    "title": "Week 4: Programming a Stroop experiment in JsPsych",
    "section": "Part 2: Using a script to generate a stimulus array",
    "text": "Part 2: Using a script to generate a stimulus array"
  },
  {
    "objectID": "blog/4_stroop/index.html#concepts-to-cover",
    "href": "blog/4_stroop/index.html#concepts-to-cover",
    "title": "Week 4: Programming a Stroop experiment in JsPsych",
    "section": "Concepts to cover",
    "text": "Concepts to cover\nI’ll cover the following concepts in the screencast and show how I am using software as I go along.\n\nWhat is a Stroop Experiment?\n\nReadings:\nLogan, G. D., & Zbrodoff, N. J. (1998). Stroop-type interference: Congruity effects in color naming with typewritten responses. Journal of Experimental Psychology: Human Perception and Performance, 24(3), 978–992. https://doi.org/10.1037/0096-1523.24.3.978\nMacLeod, C. M. (1991). Half a century of research on the Stroop effect: An integrative review. Psychological Bulletin, 109(2), 163. https://doi.org/10.1037/0033-2909.109.2.163\n\nProgramming a basic Stroop experiment in JsPsych from scratch\nAdditional considerations\n\nElements around the main experiment\n\nwelcoming people, explaining the task, making sure they understand, giving feedback, debriefing them.\n\nDesign considerations:\n\ndifferent response modalities (button press vs. typing vs. voice key)\nProportion manipulations\nsequence manipulations\n\n\n\n\nLinks to example code\nRemember, you can view the source code from github repository for this website.\nBasic stroop example\nSecond Stroop example"
  },
  {
    "objectID": "blog/4_stroop/index.html#assignment",
    "href": "blog/4_stroop/index.html#assignment",
    "title": "Week 4: Programming a Stroop experiment in JsPsych",
    "section": "Assignment",
    "text": "Assignment\n\nDemonstrate that you can get the Stroop tutorial example working on your Quarto blog. Feel free to attempt writing your own version of a Stroop experiment from scratch, this is the best way to learn. For this course, and at this stage, it is also fine if you obtain my example code and demonstrate that you can get it working on your quarto blog (e.g., produce a link that runs the experiment.)\nBrainstorm a manipulation that you think might change the size of the Stroop effect. For example, would making the color words bigger make it even harder to ignore the words, and therefore produce a larger Stroop effect (compared to trials where the words were much smaller and harder to read, and therefore easier to ignore)?\nProduce a version of the Stroop experiment that deploys your manipulation. In the example above, you would need to have some trials where the word appears in a small font and others where it appears in a large font.\n\n\nAdvanced\nWe will cover data analysis next week, but if you want to find out whether your manipulation worked, then you will need to analyze your data in each condition. See if you can find a way to do this. Did your manipulation succesfully cause a change in the size of the Stroop effect?"
  },
  {
    "objectID": "blog/2_Basic_web/index.html",
    "href": "blog/2_Basic_web/index.html",
    "title": "Week 2: Really Basic HTML and Javascript",
    "section": "",
    "text": "Pre-requisites:\nThis post assumes that you have a quarto blog up and running (see last post)."
  },
  {
    "objectID": "blog/2_Basic_web/index.html#overview",
    "href": "blog/2_Basic_web/index.html#overview",
    "title": "Week 2: Really Basic HTML and Javascript",
    "section": "Overview",
    "text": "Overview\nThe purpose of this week is to make sure we understand some very basic web programming concepts before attempting to code cognitive psych experiments with jsPsych.\nIf you already have experience coding for the web, that’s great, and this may be a review for you."
  },
  {
    "objectID": "blog/2_Basic_web/index.html#software",
    "href": "blog/2_Basic_web/index.html#software",
    "title": "Week 2: Really Basic HTML and Javascript",
    "section": "Software",
    "text": "Software\nYou should already have R Studio and R installed, as well as Github desktop. We will be using these tools throughout the course.\nTo program for the web you really only need a text editor (to write the code), and web-browser (to check that it works). We will use the text editor inside R studio (it’s totally fine if you want to use a different one). My preferred web-browser for debugging code is firefox. Google chrome is fine too. Safari for mac is OK."
  },
  {
    "objectID": "blog/2_Basic_web/index.html#concepts-to-cover",
    "href": "blog/2_Basic_web/index.html#concepts-to-cover",
    "title": "Week 2: Really Basic HTML and Javascript",
    "section": "Concepts to cover",
    "text": "Concepts to cover\n\nI’ll cover the following concepts in the screencast, and show how I am using software as I go along.\n\nWhat is HTML? What kind of file is it?\nWeb-browser as a compiler that interprets HTML code and displays it as a web page\nBasic anatomy of an HTML file\nAdding HTML elements to the body\n\nsee w3schools\n\nWhat is Javascript?\nWeb-browser as a javascript compiler that executes javascript code\nJavascript control over HTML elements (changing webpages with javascript, recording webpage interactions with javascript)\n\nLink to text.html"
  },
  {
    "objectID": "blog/2_Basic_web/index.html#assignment",
    "href": "blog/2_Basic_web/index.html#assignment",
    "title": "Week 2: Really Basic HTML and Javascript",
    "section": "Assignment",
    "text": "Assignment\nCreate your own basic html file. Explore the process of adding different kinds of html elements to it. See if you can program some kind of javascript interaction, even if it is super simple (e.g., like pressing a button changes something on the website).\nAdd your html file to your blog post so that it is viewable from your blog, and so that the code is viewable from github.\n\nExample assignment ideas\nIn a couple weeks we will be making a Stroop experiment demo. Part of this experiment requires being able to present words one at a time in different colors.\nThese are some example stimuli:\n Consider how you would use basic javascript and a button to achieve the following result:\n\nEvery time you click the button a new Stroop item is displayed on the screen.\n\nWe will do this later using jsPsych, but it can be instructive to figure out how to solve problems using basic javascript and html."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Course Blog",
    "section": "",
    "text": "Week 9: Orientation effects and algorithms for a continuous recognition procedure\n\n\n\n\n\n\n\nPsyc 2001\n\n\nPictures\n\n\nRecognition Memory\n\n\n\n\nAdditional literature review and solving a small puzzle\n\n\n\n\n\n\nOct 28, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 8: Recognition memory for degraded pictures\n\n\n\n\n\n\n\nPsyc 2001\n\n\nPictures\n\n\nRecognition Memory\n\n\n\n\nFocused literature review and a pilot experiment\n\n\n\n\n\n\nOct 23, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 7: Literature Review and using Zotero\n\n\n\n\n\n\n\nPsyc 2001\n\n\nPictures\n\n\nRecognition Memory\n\n\n\n\nA literature review assignment and some tips on using Zotero\n\n\n\n\n\n\nOct 13, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 6: Picture memory\n\n\n\n\n\n\n\nPsyc 2001\n\n\nPictures\n\n\nRecognition Memory\n\n\n\n\nThis week we program a replication of a classic picture memory experiment.\n\n\n\n\n\n\nOct 4, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 5: Analyzing data from a Stroop experiment in R\n\n\n\n\n\n\n\nPsyc 2001\n\n\nStroop\n\n\nR\n\n\n\n\nLast week we programmed a basic Stroop experiment using jspsych, and this week we take a quick look at analyzing the data using R.\n\n\n\n\n\n\nSep 27, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 4: Programming a Stroop experiment in JsPsych\n\n\n\n\n\n\n\nPsyc 2001\n\n\njspsych\n\n\n\n\nHow to program a basic Stroop experiment in JsPsych, and some considerations of various design parameters.\n\n\n\n\n\n\nSep 19, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 3: JsPsych and the simple reaction time tutorial\n\n\n\n\n\n\n\nPsyc 2001\n\n\njspsych\n\n\n\n\nWe look at accessing the JsPsych library and work through the tutorial on writing a simple reaction time tutorial in JsPsych.\n\n\n\n\n\n\nSep 11, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 2: Really Basic HTML and Javascript\n\n\n\n\n\n\n\nPsyc 2001\n\n\njspsych\n\n\n\n\nBasic web coding concepts for complete beginners, and some suggestions for software usage in this course.\n\n\n\n\n\n\nSep 5, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 1: Installing software and getting your Quarto Blog working\n\n\n\n\n\nInstructions for getting started with Psyc 2001 in Fall 2023\n\n\n\n\n\n\nAug 31, 2023\n\n\nMatt Crump\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Matt Crump",
    "section": "",
    "text": "This is an example quarto about page. See the quarto documentation for more options here.\nMatt Crump is a cognitive psychologist with research interests in learning, memory, attention, skill learning, semantics, and computational modeling. He runs the computational cognition lab at Brooklyn College of CUNY."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Matt Crump",
    "section": "Education",
    "text": "Education\nPostdoc, Vanderbilt University - 2011 (Psychology)\nPh.D., McMaster University - 2007 (Psychology)\nB.Sc., University of Lethbridge - 2002 (Psychology)"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Matt Crump",
    "section": "Experience",
    "text": "Experience\nAssistant Professor - Brooklyn College of CUNY (2011)\nAssociate Professor - Brooklyn College of CUNY (2016)\nFull Professor - Brooklyn College of CUNY (2022)"
  },
  {
    "objectID": "blog/1_Getting_started/index.html",
    "href": "blog/1_Getting_started/index.html",
    "title": "Week 1: Installing software and getting your Quarto Blog working",
    "section": "",
    "text": "Hi Everyone,\nAs we discussed in our meeting a goal for this week is for everyone to get a Quarto blog up and running. You will use this blog throughout the semester as a lab journal. Every week this blog will be a place where you place your work (along with making notes for yourself about what you are doing).\nWe will use R, R Studio, Quarto, and Github to create the blog. These very same tools will be used for several other purposes including coding experiments and analyzing data from them.\nThis post contains instructions for getting a quarto blog up and running. If you can’t get something to work and have spend more than 30 minutes trying to solve the problem, then please email me and I will help you!"
  },
  {
    "objectID": "blog/1_Getting_started/index.html#setting-up-your-quarto-blog",
    "href": "blog/1_Getting_started/index.html#setting-up-your-quarto-blog",
    "title": "Week 1: Installing software and getting your Quarto Blog working",
    "section": "Setting up your quarto blog",
    "text": "Setting up your quarto blog\nI wrote a blog post about how to do this a year ago. Here is the link. All of the steps should still work. The blog post has a video walk through that should be helpful as well.\nhttps://www.crumplab.com/blog/post_887_8_25_22_quartoblog/"
  },
  {
    "objectID": "blog/1_Getting_started/index.html#make-a-first-post",
    "href": "blog/1_Getting_started/index.html#make-a-first-post",
    "title": "Week 1: Installing software and getting your Quarto Blog working",
    "section": "Make a first post",
    "text": "Make a first post\nIf you get everything working then you should be able to create new posts and delete the example posts. Make at least one new post to demonstrate for yourself that it works.\nI find blogging very helpful for learning new skills. For example, I’ll often use a blog post as a scratch pad to take notes or make observations about something that I’m trying to learn about. These notes often become helpful for me later on. I suggest that you write a blog post that contains notes about setting up your blog. This could include questions you have, notes about something that didn’t work, or ideas for things about the site you might want to change later."
  },
  {
    "objectID": "blog/1_Getting_started/index.html#send-me-your-github-repo",
    "href": "blog/1_Getting_started/index.html#send-me-your-github-repo",
    "title": "Week 1: Installing software and getting your Quarto Blog working",
    "section": "Send me your github repo",
    "text": "Send me your github repo\nIf you get everything working, then you will have a github repository for your blog. Please send me the URL for this repository once you have it. We will be sharing code over github throughout this course.\nFor example, the github repo for this course website is:\nhttps://github.com/CrumpLab/psyc2001"
  },
  {
    "objectID": "blog/1_Getting_started/index.html#feel-free-to-poke-around-quarto",
    "href": "blog/1_Getting_started/index.html#feel-free-to-poke-around-quarto",
    "title": "Week 1: Installing software and getting your Quarto Blog working",
    "section": "Feel free to poke around Quarto",
    "text": "Feel free to poke around Quarto\nThe documentation for quarto is available here:\nhttps://quarto.org\nThere is much more to quarto than making blogs, so feel free to poke around in the documentation to see what it can do."
  },
  {
    "objectID": "blog/3_jspsych_tutorial/index.html",
    "href": "blog/3_jspsych_tutorial/index.html",
    "title": "Week 3: JsPsych and the simple reaction time tutorial",
    "section": "",
    "text": "Pre-requisites:\nHave followed along from the previous posts"
  },
  {
    "objectID": "blog/3_jspsych_tutorial/index.html#concepts-to-cover",
    "href": "blog/3_jspsych_tutorial/index.html#concepts-to-cover",
    "title": "Week 3: JsPsych and the simple reaction time tutorial",
    "section": "Concepts to cover",
    "text": "Concepts to cover\nI’ll cover the following concepts in the screencast and show how I am using software as I go along.\n\nWhat is JsPsych?\n\nOverview of the JsPsych documentation website\n\nGetting JsPsych on your computer\n\ndownloading the library from github\nOr, using links\n\nSimple reaction time tasks\n\nDonders and subtractive logic\nReading: https://www.crumplab.com/cognition/textbook/C7_Information_Processing.html#donders-processing-stages\n\nWalkthrough of the JsPsych simpleRT demo.\n\n\nExample of showing the code works\nLink to test.html"
  },
  {
    "objectID": "blog/3_jspsych_tutorial/index.html#assignment",
    "href": "blog/3_jspsych_tutorial/index.html#assignment",
    "title": "Week 3: JsPsych and the simple reaction time tutorial",
    "section": "Assignment",
    "text": "Assignment\n\nShow that you can get the JsPsych simple RT demo working and posted to your blog. You should be able to do this based on following along with the documentation and the screencast.\nGeneralize: The reading about Donder’s concept of processing stages discussed three kinds of tasks\n\n\nA basic detection task\nA Go/NO-GO task\nA choice reaction time task\n\nYour assignment is to attempt to produce scripts for each of these tasks by modifying the example simple RT demo script.\n\nAdvanced\nIf you are looking for an advanced challenge, then attempt the following.\nA researcher may want to conduct the above 3 different versions of a reaction time task for the same participant. Produce a script that presents each task one after the other.\nAdditionally, a researcher may want to control or randomize the sequence of each task. Produce a script that randomizes task order."
  },
  {
    "objectID": "blog/5_stroop_data/index.html",
    "href": "blog/5_stroop_data/index.html",
    "title": "Week 5: Analyzing data from a Stroop experiment in R",
    "section": "",
    "text": "Pre-requisites:\nHave followed along from the previous posts."
  },
  {
    "objectID": "blog/5_stroop_data/index.html#screencast",
    "href": "blog/5_stroop_data/index.html#screencast",
    "title": "Week 5: Analyzing data from a Stroop experiment in R",
    "section": "Screencast",
    "text": "Screencast"
  },
  {
    "objectID": "blog/5_stroop_data/index.html#concepts-to-cover",
    "href": "blog/5_stroop_data/index.html#concepts-to-cover",
    "title": "Week 5: Analyzing data from a Stroop experiment in R",
    "section": "Concepts to cover",
    "text": "Concepts to cover\nI’ll cover the following concepts in the screencast and show how I am using software as I go along.\n\npiloting an experiment\nsaving data\n\ncopy from the screen\nsave to csv\n\nquick R review\n\nobtaining necessary packages\nR code chunks\n\nScripting the analysis\n\nload the data into T\ntidyverse pipeline to get individual subject means in all conditions\ngroup means\nplotting the data using ggplot2"
  },
  {
    "objectID": "blog/5_stroop_data/index.html#r-resources",
    "href": "blog/5_stroop_data/index.html#r-resources",
    "title": "Week 5: Analyzing data from a Stroop experiment in R",
    "section": "R Resources",
    "text": "R Resources\nWe did not spend much time introducing R. Hopefully the screencast is enough to get you started with the example scripts below.\nHere are some additional resources for learning R.\n\nTutorials from an R statistics course\nBasic coding reference\nHuge list of R resources"
  },
  {
    "objectID": "blog/5_stroop_data/index.html#assignment",
    "href": "blog/5_stroop_data/index.html#assignment",
    "title": "Week 5: Analyzing data from a Stroop experiment in R",
    "section": "Assignment",
    "text": "Assignment\n\nObtain the sample data from this tutorial (you can get them from the github repository for this blog). Show that you can conduct the analysis in your blog post.\nCreate pilot data from your own Stroop experiment by running yourself as a participant a few times.\nAnalyse the data in R by modifying the example scripts as necessary."
  },
  {
    "objectID": "blog/5_stroop_data/index.html#example-code",
    "href": "blog/5_stroop_data/index.html#example-code",
    "title": "Week 5: Analyzing data from a Stroop experiment in R",
    "section": "Example code",
    "text": "Example code\nThe following example code shows some minimal examples for analyzing RT and accuracy data from a basic Stroop experiment.\n\nLoading libraries and importing data\n\n# install from the Packages tab, or run the below in the console once.\n#install.packages('tidyverse')\n#install.packages('rio')\n\n# load libraries\nlibrary(tidyverse)\nlibrary(rio)\n\n# get data file names\nfile_names &lt;- list.files(\"data\",full.names = TRUE)\n\n# initialize data frame to hold individual subject data\nall_data &lt;- tibble()\n\n# loop through each file and import\nfor(i in 1:length(file_names)) {\n  \n  # import a single data file to a temporary data frame\n  temp_df &lt;- rio::import(file_names[i]) %&gt;%\n    mutate(subject = i)\n  \n  # append the single subject data to larger data frame\n  all_data &lt;- rbind(all_data,temp_df)\n  \n}\n\n\n\nReaction time analysis\nGoal: get individual subject mean reaction times for correct trials. Create a plot\n\n# pre-process and filter rows\nfiltered_data &lt;- all_data %&gt;%\n  filter(task == \"stroop\",\n         correct == \"TRUE\") %&gt;%\n  mutate(rt = as.numeric(rt))\n\n# get individual subject means in each condition\nsubject_mean_RT &lt;- filtered_data %&gt;%\n  group_by(subject,congruency) %&gt;%\n  summarize(mean_rt = mean(rt), .groups = \"drop\")\n\n# get group means in each condition\ngroup_mean_RT &lt;- subject_mean_RT %&gt;%\n  group_by(congruency) %&gt;%\n  summarize(mean_reaction_time = mean(mean_rt),\n            sem = sd(mean_rt)/sqrt(length(mean_rt))\n            )\n\n# plot\nggplot(group_mean_RT, aes(x=congruency,y=mean_reaction_time)) +\n  geom_bar(stat=\"identity\") +\n  geom_errorbar(aes(ymin=mean_reaction_time-sem,\n                    ymax=mean_reaction_time+sem),\n                width=.2) +\n  ylab(\"Mean Reaction Time (ms)\") +\n  xlab(\"Congruency\")+\n  coord_cartesian(ylim=c(400,800)) +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\n\n\nAccuracy analysis\nGoal: get individual subject proportion correct. Create a plot\n\n# pre-process and filter rows\nfiltered_data_pc &lt;- all_data %&gt;%\n  filter(task == \"stroop\")\n\n# get individual subject proportion correct values\nsubject_pc &lt;- filtered_data_pc %&gt;%\n  group_by(subject,congruency) %&gt;%\n  summarize(proportion_correct = mean(correct), .groups = \"drop\")\n\n# get group means in each condition\ngroup_mean_pc &lt;- subject_pc %&gt;%\n  group_by(congruency) %&gt;%\n  summarize(mean_proportion_correct = mean(proportion_correct),\n            sem = sd(proportion_correct)/sqrt(length(proportion_correct))\n            )\n\n# plot\nggplot(group_mean_pc, aes(x=congruency,y=mean_proportion_correct)) +\n  geom_bar(stat=\"identity\") +\n  geom_errorbar(aes(ymin=mean_proportion_correct-sem,\n                    ymax=mean_proportion_correct+sem),\n                width=.2) +\n  ylab(\"Mean Proportion Correct\") +\n  xlab(\"Congruency\")+\n  coord_cartesian(ylim=c(0.5,1)) +\n  theme_classic()"
  },
  {
    "objectID": "blog/7_lit_review/index.html",
    "href": "blog/7_lit_review/index.html",
    "title": "Week 7: Literature Review and using Zotero",
    "section": "",
    "text": "This week does not involve a JsPsych assignment. Up to now we have achieved some familiarity with JsPsych by programming three demo experiments. Moving forward, the goal is to create some “real” experiments that the lab may run in the future.\nThe theme for this semester is recognition memory for pictures. In order to figure out what kind of experiments we might create, it is important to first learn more about the existing literature. So, the assignment for this week is to read the following review paper:\nLevie, W. H., & Hathaway, S. N. (1988). Picture recognition memory: A review of research and theory. Journal of Visual Verbal Languaging, 8(1), 6–45.\nIn addition, your task this week involves a few more items."
  },
  {
    "objectID": "blog/7_lit_review/index.html#zotero",
    "href": "blog/7_lit_review/index.html#zotero",
    "title": "Week 7: Literature Review and using Zotero",
    "section": "Zotero",
    "text": "Zotero\nI put this information together for another class, it shows basic usage of zotero:\nhttps://www.crumplab.com/cognition/articles/course_docs/resources.html#zotero"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Course Resources",
    "section": "",
    "text": "Note: this website is being built as we go through the course. As a class we may decide to make changes to where things go.\nTo begin with this page will contain links to various useful information, software and tutorials relevant to the course goals.\nWe will go over all of these things in class or in screencasts. If you have questions just ask!"
  },
  {
    "objectID": "resources.html#software",
    "href": "resources.html#software",
    "title": "Course Resources",
    "section": "Software",
    "text": "Software\nDownload all of these for your computer. All of the software is free an open-source.\n\nR. This is a programming language we will use for several things including data analysis.\nR Studio Desktop. This is an IDE (Integrated Development Environment) for R and other languages. We will use it to code.\nGithub Desktop. We will use this to move files back and forth from Github.com\nGithub.com. Make a free github.com account."
  },
  {
    "objectID": "resources.html#jspsych",
    "href": "resources.html#jspsych",
    "title": "Course Resources",
    "section": "JsPsych",
    "text": "JsPsych\nThe JsPsych website contains documentation and tutorials.\nhttps://www.jspsych.org/7.3/\nYou can obtain the latest release from github:\nhttps://github.com/jspsych/jsPsych"
  },
  {
    "objectID": "resources.html#browser-recommendations",
    "href": "resources.html#browser-recommendations",
    "title": "Course Resources",
    "section": "Browser recommendations",
    "text": "Browser recommendations\nI recommend using Firefox for development. Chrome is fine too. And, Safari on a mac is OK, but may be annoying."
  },
  {
    "objectID": "resources.html#tutorials",
    "href": "resources.html#tutorials",
    "title": "Course Resources",
    "section": "Tutorials",
    "text": "Tutorials\nIf you come across useful tutorials about JsPsych let me know and I can post them here."
  },
  {
    "objectID": "resources.html#jatos",
    "href": "resources.html#jatos",
    "title": "Course Resources",
    "section": "JATOS",
    "text": "JATOS\nI use this software along with a digitalocean droplet to serve JsPsych experiments to the web. Using JATOS is an advanced topic that we won’t get to until the end of the semester. If you have questions about it, just ask.\nhttps://www.jatos.org"
  },
  {
    "objectID": "resources.html#datapipe",
    "href": "resources.html#datapipe",
    "title": "Course Resources",
    "section": "datapipe",
    "text": "datapipe\nThis is a tool for serving JsPsych experiments from Github Pages and having data routed to an OSF repository. This allows for a “server-less” way to collect data.\nhttps://pipe.jspsych.org"
  },
  {
    "objectID": "blog/8_noisy_pictures/index.html",
    "href": "blog/8_noisy_pictures/index.html",
    "title": "Week 8: Recognition memory for degraded pictures",
    "section": "",
    "text": "Throughout the rest of the semester we will be developing experiments around the theme of recognition memory for pictures.\nThis week there are two goals.\n\nI will be programming a new experiment to measure how recognition memory for pictures varies as visual noise is added to the pictures. I will be sharing my code as we go. After I am finished I will share a link to the experiment with everyone and ask you to attempt the experiment. We will then look at the pilot data and discuss the experimental design.\nIn addition, this week the main assignment is to do some additional reading on the topic of recognition memory for degraded pictures.\n\nYou can choose to read and take notes on one of these papers, or you can do a literature search to see if you can find any additional papers that manipulate picture quality (by adding noise, changing size, blurring, etc.). If you do a literature search then take notes on the new papers that you found.\nMeng, M., & Potter, M. C. (2008). Detecting and remembering pictures with and without visual noise. Journal of Vision, 8(9), 7–7. https://doi.org/10.1167/8.9.7\nSearston, R. A., Thompson, M. B., Vokey, J. R., French, L. A., & Tangen, J. M. (2019). How low can you go? Detecting style in extremely low resolution images. Journal of Experimental Psychology: Human Perception and Performance, 45(5), 573. https://doi.org/10.1037/xhp0000628\nWolfe, J. M., & Kuzmova, Y. I. (2011). How many pixels make a memory? Picture memory for small pictures. Psychonomic Bulletin & Review, 18(3), 469–475. https://doi.org/10.3758/s13423-011-0075-z"
  },
  {
    "objectID": "blog/9_continuous/index.html",
    "href": "blog/9_continuous/index.html",
    "title": "Week 9: Orientation effects and algorithms for a continuous recognition procedure",
    "section": "",
    "text": "As a quick recap. In our meeting yesterday we tried a pilot version of a continuous recognition memory procedure for pictures with different levels of noise added.\nI am still in the process of addressing some of the design issues in that experiment that we discussed, and I expect to be finished with that by early next week. Once I have a finalized version I will email you all a link to try the study one more time, and we will look at the data next week.\nIn addition, the assignment for this week is for you to do a little bit of research yourself, this time on rotation and orientation effects.\nMany studies have shown that inverted or rotated stimuli may impair memory. Your first task is to read the very short paper (which is attached and in the zotero group library):\nScapinello, K. F., & Yarmey, A. D. (1970). The role of familiarity and orientation in immediate and delayed recognition of pictorial stimuli. Psychonomic Science, 21(6), 329–330.\nThen use google scholar, or some other method (e.g., the references from the above paper), to find another paper investigating how rotation or inversion may impact recognition memory.\nMake a blog post taking notes about the paper, and describing the extra paper that you found. After we finish the pictures in noise experiment, we’ll move on to making an experiment that attempts to replicate rotation effects."
  },
  {
    "objectID": "blog/9_continuous/index.html#advanced",
    "href": "blog/9_continuous/index.html#advanced",
    "title": "Week 9: Orientation effects and algorithms for a continuous recognition procedure",
    "section": "Advanced",
    "text": "Advanced\nThis section is not required, but may be of some interest (e.g., you could decide to work on this problem this week instead of the above). In a continuous recognition procedure items are presented one at time and a participants judges whether the item is new or old. A new item is one that has never been presented before. An old item is a repetition of a previously presented item.\nThe experiment that we tried in class was an example of a continuous recognition procedure. One of the issues with this design is controlling the mixture of new and old items in the sequence of trials. In our pilot experiment, there was a noticeable bias in our sequence. Specifically, most of the early trials were new items and most of later trials were old items.\nThe advanced problem is to consider our approach to the sequencing of new and old items. Ideally, we should be able to control:\n\nThe proportion of new and old items (e.g. 50% each).\nThe lag between repetitions. That is how many other items are between first and second presentations.\nAvoiding long runs of all new or all old\n\nHere is an example approach that solves some of the problem, but not all of them.\nLet’s say we have 100 pictures, represented here by the numbers 1 to 100\n\nall_pictures &lt;- 1:100\n\nI will use R to duplicate the set of numbers, and then randomly shuffle the order. This process ensures that each item (1 to 100) is presented twice in a random order. As a result, there would be 100 new trials (the first time you see a particular number), and 100 old trials (the second time you a particular number).\n\ntrial_sequence &lt;- sample(c(1:100,1:100))\n\nHowever, simply shuffling the values randomly produces some other issues. The code chunk below analyzes the above 200 trial sequence to determine whether a particular trial is a new or old item. If the item is old, the lag between presentations is also computed.\n\ndf &lt;- data.frame()\nfor(i in 1:200){\n  num_positions &lt;- which(trial_sequence %in% trial_sequence[i])\n  if(i == num_positions[1]) {\n    type &lt;- \"new\"\n    lag &lt;- NA\n  }\n  if(i == num_positions[2]) {\n    type &lt;- \"old\"\n    lag &lt;- num_positions[2] - num_positions[1]\n  }\n  t_df &lt;- data.frame(trial = i,\n                     item = trial_sequence[i],\n                     type = type,\n                     lag = lag\n                     )\n  df &lt;-  rbind(df,t_df)\n}\n\nThis results in a data frame codes properties of the trial sequence. Notice that most of the beginning trials are new items, and most of the ending trials are old items.\n\nknitr::kable(df)\n\n\n\n\ntrial\nitem\ntype\nlag\n\n\n\n\n1\n37\nnew\nNA\n\n\n2\n48\nnew\nNA\n\n\n3\n6\nnew\nNA\n\n\n4\n55\nnew\nNA\n\n\n5\n23\nnew\nNA\n\n\n6\n82\nnew\nNA\n\n\n7\n100\nnew\nNA\n\n\n8\n51\nnew\nNA\n\n\n9\n17\nnew\nNA\n\n\n10\n28\nnew\nNA\n\n\n11\n79\nnew\nNA\n\n\n12\n56\nnew\nNA\n\n\n13\n81\nnew\nNA\n\n\n14\n93\nnew\nNA\n\n\n15\n74\nnew\nNA\n\n\n16\n88\nnew\nNA\n\n\n17\n3\nnew\nNA\n\n\n18\n10\nnew\nNA\n\n\n19\n57\nnew\nNA\n\n\n20\n86\nnew\nNA\n\n\n21\n38\nnew\nNA\n\n\n22\n53\nnew\nNA\n\n\n23\n42\nnew\nNA\n\n\n24\n68\nnew\nNA\n\n\n25\n59\nnew\nNA\n\n\n26\n21\nnew\nNA\n\n\n27\n16\nnew\nNA\n\n\n28\n8\nnew\nNA\n\n\n29\n2\nnew\nNA\n\n\n30\n66\nnew\nNA\n\n\n31\n73\nnew\nNA\n\n\n32\n100\nold\n25\n\n\n33\n94\nnew\nNA\n\n\n34\n25\nnew\nNA\n\n\n35\n62\nnew\nNA\n\n\n36\n9\nnew\nNA\n\n\n37\n94\nold\n4\n\n\n38\n26\nnew\nNA\n\n\n39\n3\nold\n22\n\n\n40\n71\nnew\nNA\n\n\n41\n55\nold\n37\n\n\n42\n75\nnew\nNA\n\n\n43\n58\nnew\nNA\n\n\n44\n71\nold\n4\n\n\n45\n99\nnew\nNA\n\n\n46\n69\nnew\nNA\n\n\n47\n61\nnew\nNA\n\n\n48\n68\nold\n24\n\n\n49\n11\nnew\nNA\n\n\n50\n74\nold\n35\n\n\n51\n85\nnew\nNA\n\n\n52\n47\nnew\nNA\n\n\n53\n78\nnew\nNA\n\n\n54\n5\nnew\nNA\n\n\n55\n41\nnew\nNA\n\n\n56\n15\nnew\nNA\n\n\n57\n33\nnew\nNA\n\n\n58\n65\nnew\nNA\n\n\n59\n29\nnew\nNA\n\n\n60\n13\nnew\nNA\n\n\n61\n65\nold\n3\n\n\n62\n4\nnew\nNA\n\n\n63\n86\nold\n43\n\n\n64\n52\nnew\nNA\n\n\n65\n48\nold\n63\n\n\n66\n2\nold\n37\n\n\n67\n84\nnew\nNA\n\n\n68\n61\nold\n21\n\n\n69\n9\nold\n33\n\n\n70\n46\nnew\nNA\n\n\n71\n70\nnew\nNA\n\n\n72\n54\nnew\nNA\n\n\n73\n17\nold\n64\n\n\n74\n53\nold\n52\n\n\n75\n77\nnew\nNA\n\n\n76\n96\nnew\nNA\n\n\n77\n4\nold\n15\n\n\n78\n67\nnew\nNA\n\n\n79\n51\nold\n71\n\n\n80\n64\nnew\nNA\n\n\n81\n31\nnew\nNA\n\n\n82\n43\nnew\nNA\n\n\n83\n98\nnew\nNA\n\n\n84\n32\nnew\nNA\n\n\n85\n95\nnew\nNA\n\n\n86\n73\nold\n55\n\n\n87\n99\nold\n42\n\n\n88\n22\nnew\nNA\n\n\n89\n19\nnew\nNA\n\n\n90\n33\nold\n33\n\n\n91\n81\nold\n78\n\n\n92\n26\nold\n54\n\n\n93\n36\nnew\nNA\n\n\n94\n91\nnew\nNA\n\n\n95\n82\nold\n89\n\n\n96\n75\nold\n54\n\n\n97\n85\nold\n46\n\n\n98\n7\nnew\nNA\n\n\n99\n80\nnew\nNA\n\n\n100\n49\nnew\nNA\n\n\n101\n8\nold\n73\n\n\n102\n45\nnew\nNA\n\n\n103\n69\nold\n57\n\n\n104\n50\nnew\nNA\n\n\n105\n78\nold\n52\n\n\n106\n35\nnew\nNA\n\n\n107\n45\nold\n5\n\n\n108\n12\nnew\nNA\n\n\n109\n40\nnew\nNA\n\n\n110\n60\nnew\nNA\n\n\n111\n52\nold\n47\n\n\n112\n60\nold\n2\n\n\n113\n34\nnew\nNA\n\n\n114\n92\nnew\nNA\n\n\n115\n21\nold\n89\n\n\n116\n89\nnew\nNA\n\n\n117\n1\nnew\nNA\n\n\n118\n18\nnew\nNA\n\n\n119\n67\nold\n41\n\n\n120\n87\nnew\nNA\n\n\n121\n56\nold\n109\n\n\n122\n11\nold\n73\n\n\n123\n22\nold\n35\n\n\n124\n83\nnew\nNA\n\n\n125\n93\nold\n111\n\n\n126\n84\nold\n59\n\n\n127\n19\nold\n38\n\n\n128\n28\nold\n118\n\n\n129\n64\nold\n49\n\n\n130\n24\nnew\nNA\n\n\n131\n77\nold\n56\n\n\n132\n44\nnew\nNA\n\n\n133\n44\nold\n1\n\n\n134\n97\nnew\nNA\n\n\n135\n29\nold\n76\n\n\n136\n18\nold\n18\n\n\n137\n5\nold\n83\n\n\n138\n76\nnew\nNA\n\n\n139\n80\nold\n40\n\n\n140\n70\nold\n69\n\n\n141\n58\nold\n98\n\n\n142\n88\nold\n126\n\n\n143\n63\nnew\nNA\n\n\n144\n76\nold\n6\n\n\n145\n72\nnew\nNA\n\n\n146\n35\nold\n40\n\n\n147\n36\nold\n54\n\n\n148\n39\nnew\nNA\n\n\n149\n1\nold\n32\n\n\n150\n50\nold\n46\n\n\n151\n39\nold\n3\n\n\n152\n89\nold\n36\n\n\n153\n30\nnew\nNA\n\n\n154\n14\nnew\nNA\n\n\n155\n27\nnew\nNA\n\n\n156\n13\nold\n96\n\n\n157\n40\nold\n48\n\n\n158\n38\nold\n137\n\n\n159\n31\nold\n78\n\n\n160\n91\nold\n66\n\n\n161\n47\nold\n109\n\n\n162\n7\nold\n64\n\n\n163\n87\nold\n43\n\n\n164\n12\nold\n56\n\n\n165\n90\nnew\nNA\n\n\n166\n14\nold\n12\n\n\n167\n97\nold\n33\n\n\n168\n15\nold\n112\n\n\n169\n46\nold\n99\n\n\n170\n25\nold\n136\n\n\n171\n59\nold\n146\n\n\n172\n63\nold\n29\n\n\n173\n66\nold\n143\n\n\n174\n42\nold\n151\n\n\n175\n90\nold\n10\n\n\n176\n34\nold\n63\n\n\n177\n49\nold\n77\n\n\n178\n37\nold\n177\n\n\n179\n23\nold\n174\n\n\n180\n92\nold\n66\n\n\n181\n20\nnew\nNA\n\n\n182\n62\nold\n147\n\n\n183\n95\nold\n98\n\n\n184\n20\nold\n3\n\n\n185\n41\nold\n130\n\n\n186\n96\nold\n110\n\n\n187\n27\nold\n32\n\n\n188\n98\nold\n105\n\n\n189\n43\nold\n107\n\n\n190\n83\nold\n66\n\n\n191\n16\nold\n164\n\n\n192\n30\nold\n39\n\n\n193\n72\nold\n48\n\n\n194\n24\nold\n64\n\n\n195\n6\nold\n192\n\n\n196\n79\nold\n185\n\n\n197\n10\nold\n179\n\n\n198\n54\nold\n126\n\n\n199\n57\nold\n180\n\n\n200\n32\nold\n116\n\n\n\n\n\nWe can also look at the distribution of lags for old items. The random shuffling produced a wide range of lags, including very short lags.\n\nhist(df$lag)"
  },
  {
    "objectID": "blog/9_continuous/index.html#next-steps",
    "href": "blog/9_continuous/index.html#next-steps",
    "title": "Week 9: Orientation effects and algorithms for a continuous recognition procedure",
    "section": "Next steps",
    "text": "Next steps\nIdeally we want to create a different way of mixing items together that allows:\n\nReduction of bias toward new/old items across the sequence. The beginning shouldn’t be mostly new items, and the end shouldn’t be mostly old.\nMore control over the lags between first and second presentation of an item. For example, all items might have a minimum lag of 50 or greater.\n\nI’ll be working on solutions to this problem, and feel free to try your own as your work for this week. The solution to this type of problem requires an algorithm for mixing the items, and then some analysis of the sequence to show that it expresses the desired properties.\nOne of the papers in our zotero group library used a continuous recognition procedure, and their method section describes an approach that involves “test” items, and “filler” items. Here’s the reference:\nIsola, P., Xiao, J., Torralba, A., & Oliva, A. (2011). What makes an image memorable? Computer Vision and Pattern Recognition (CVPR), 2011 IEEE Conference On, 145–152."
  },
  {
    "objectID": "blog/9_continuous/index.html#updates",
    "href": "blog/9_continuous/index.html#updates",
    "title": "Week 9: Orientation effects and algorithms for a continuous recognition procedure",
    "section": "Updates",
    "text": "Updates\nHere’s what I came up with.\n\nVerbal description of algorithm\nThis algorithm is designed to create a sequence of items with specific characteristics:\n\nChoose a total of “n” items to be presented twice, for example, selecting 200 pictures for double presentation.\nDefine a minimum and maximum lag range, representing the number of items between the first and second presentation (e.g., a lag range of 50 to 100).\nCalculate the total number of trials as the product of the number of pictures (n) times 2, and then add the maximum lag range (e.g., 200 * 2 + 100 = 500 trials).\nRandomly distribute the first occurrences of the items within the first 400 trials (considering the maximum lag range) to avoid exceeding the trial limit.\nAssign the remaining unassigned spots in the sequence to the second occurrences of each item. Iterate through the sequence, and for each first-occurrence item, find open positions within the specified lag range. Randomly choose one and fill it with the second occurrence of the current item. Repeat this process throughout the sequence.\nAny remaining unassigned spots will be filled with “filler” items. The aim is to balance the beginning and end of the sequence to avoid bias toward new or old items. Here’s how it’s done:\n\nFiller items are introduced, which are additional items.\nA small window of filler items is selected (e.g., four filler items).\nThe array of filler items is doubled, and the order is shuffled (e.g., 1,2,3,4,1,2,3,4 -&gt; 1,3,2,2,4,3,1,4).\nFiller items are assigned to the missing values in the trial sequence based on these shuffled indices.\nThis process is repeated across the entire sequence to incorporate new sets of filler items.\n\n\nIn summary, the algorithm is designed to generate a sequence of items, ensuring that first and second occurrences of items are appropriately spaced and filling any gaps with filler items to avoid bias of old vs new items at the beginning and end of the sequence.\n\n\nR code version\n\n# set total number of items that will be repeated\nn_items &lt;- 200\n# set range of possible lags\nlag_range &lt;- c(50,100)\n# calculate total_trials needed\ntotal_trials &lt;- (n_items*2)+lag_range[2]\n\n# spread out the first occurrences of each item across the first 400 positions. This ensures a relatively uniform mixture of new items across the first 400 trials.\n# initial_spread has 500 slots, 1s are randomly assigned to 200 positions within the first 400 slots. 0s are assigned everywhere else.\n# 1s indicate that an item will receive its first presentation in that slot\ninitial_spread &lt;- c(sample(c(rep(1,200),rep(0,200))),rep(0,100)) \n\n# create an empty vector to hold the trial sequence. \n# The trial sequence will also have 500 slots, each slot will be filled with a integer representing a specific item (from 1 to 200, and greater than 200 for filler items)\nsequence &lt;- c()\n\n# assign first occurrences of each of the 200 items to the locations that had 1s.\nsequence[which(initial_spread == 1)] &lt;- 1:200\n\n# get available spots, these are spots with 0s\navailable &lt;- which(initial_spread == 0)\n\n# create a vector to hold items that have already been presented twice\nold &lt;- c()\n\n# loop across each item in sequence\nfor(i in 1:length(sequence)){\n  # make sure item is an integer\n  if(is.na(sequence[i]) == FALSE){ \n    # make sure item hasn't been presented twice already\n    if(sequence[i] %in% old == FALSE){ \n      # whatever item this is will be presented twice, add it to old\n      old &lt;- c(old,sequence[i])\n      # get possible open spots that are within the lag range\n      possible_spots &lt;- available[available &gt; i+lag_range[1] & available &lt; i+lag_range[2]]\n      \n      # error checking if there are no spots left\n      if(length(possible_spots) &lt; 1) {\n        print(i)\n        break\n      }\n      \n      # pick a random open spot\n      spot_choice &lt;- sample(possible_spots)[1]\n      \n      # assign the current item to the chosen spot\n      sequence[spot_choice] &lt;- sequence[i]\n      \n      # update the available spots\n      initial_spread[spot_choice] &lt;- 1\n      available &lt;- which(initial_spread == 0)\n    }\n  }\n}\n\n# At this point the sequence should be full of the values 1 to 200\n# with each value occurring twice\n# and with the lag between repetitions randomly assigned within the lag range\n# all other values are NA, indicating no item has been assigned. \n# These items need to be \"filled\" with non-critical items\n# non-critical items will be extra items with much shorter lags\n# they are included to balance the proportion of old/new items across the sequence\n\n# add fillers to NA\n\n# get the number of NAs in the sequence\nnum_NA &lt;- length(sequence[is.na(sequence)])\n\n# make the count even\nif(num_NA %% 2 != 0) num_NA &lt;-  num_NA+1\n\n# figure out how many sets will be needed\nblocks &lt;- ceiling(num_NA/8)\n\n# randomly generate sets of item indices with short lags\n# make sure there is enough to cover all NAs\nnew_order &lt;- c(replicate(blocks,sample(c(1:4,1:4))))\nnew_vals &lt;- rep(seq(200,200+((blocks-1)*4),4),each=8)\n\n# Filler items are assigned values greater than 200\nNA_sequence &lt;- new_vals+new_order\n\n# add filler items to the sequence\nna_cnt &lt;- 0\nfor(i in 1:length(sequence)){\n  if(is.na(sequence[i]) == TRUE){\n    na_cnt &lt;- na_cnt + 1\n    sequence[i] &lt;- NA_sequence[na_cnt]\n  }\n}\n\nPrint out example sequence\n\nprint(sequence)\n\n  [1]   1 203   2   3 203 204   4 202 204 202   5   6 201 201 208 208   7   8\n [19] 207   9 205  10 207  11  12  13 205 206 206 211  14 210 209  15  16  17\n [37] 212 209 210  18  19 212  20 211 216 214 215 213 213  21  22  23  24  25\n [55] 214 216  26  27  28  29 215  30  31  32 219   6  33  34   5   2 217 218\n [73]  35   1 217 219  36  37  38 218 220  39  40  41 220  42  15  43  44  12\n [91]   7  45  46  47   8  48  49 224   3  13  50 222  51  52  10   4  14  23\n[109]  18   9 223  24  53  54  55  56  11  57  58  59  28  60  61  62  63  16\n[127]  64  19  65  66  17  67  68  69  70  26  71  72  22  21  20  73  74  75\n[145]  31  27  25  76  77  30  78  79  80  81  36  29  35  82  42  83  32  84\n[163]  85  33  34  86  37  48 222  87  39  51  44  40  88  38  89  90  41  91\n[181]  45  52  46  43  54  92  93  47  94  95  65  49  96  97  98  50  59  99\n[199] 100  75 101  72 102  62  61 103  55  53  60 104 105 106  57  56 107  58\n[217] 108 109  68  76  63 110  70 111  64 112  66  74  86 113  67 114  69 115\n[235]  71  73 116 117 118 119 120  78  77 121 122  83 123  82 124  80  79 125\n[253]  81  90 100  84  85  88 126  91 127 128  93 224  87 129 130 131  89  94\n[271] 132 133 134  96 135 136 101  95 137 138 139 140 102  92  97 141 142 104\n[289] 143 144 103 145 146  98 105  99 106 147 110 118 115 109 148 124 149 112\n[307] 107 121 150 151 152 108 153 154 114 117 119 155 156 111 157 158 159 113\n[325] 160 161 162 163 164 165 116 166 120 167 168 169 132 170 221 122 171 130\n[343] 133 221 123 172 127 173 174 125 126 142 175 176 136 177 223 140 178 134\n[361] 128 179 139 131 129 143 180 181 182 141 183 184 135 185 186 138 137 187\n[379] 144 188 227 189 190 145 191 192 193 194 195 146 150 147 148 196 158 197\n[397] 149 198 199 200 228 166 152 226 153 227 226 154 151 157 173 160 155 156\n[415] 225 163 164 162 169 161 178 159 228 168 172 167 225 165 182 175 229 229\n[433] 230 170 174 231 171 193 231 232 232 195 230 233 234 190 177 234 185 235\n[451] 233 236 176 235 236 181 188 180 179 238 237 199 239 191 186 189 183 240\n[469] 184 237 240 197 239 238 187 242 241 194 192 244 243 242 198 200 243 241\n[487] 244 248 196"
  },
  {
    "objectID": "blog/9_continuous/index.html#to-do",
    "href": "blog/9_continuous/index.html#to-do",
    "title": "Week 9: Orientation effects and algorithms for a continuous recognition procedure",
    "section": "To Do",
    "text": "To Do\nCome back and do some analyses of the sequence to show it has the properties we intend it to have. Note also, this algorithm would need to be implemented in javascript for our experiment (already done)."
  }
]