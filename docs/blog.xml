<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>psyc2001</title>
<link>https://crumplab.com/psyc2001/blog.html</link>
<atom:link href="https://crumplab.com/psyc2001/blog.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.386</generator>
<lastBuildDate>Fri, 10 Nov 2023 05:00:00 GMT</lastBuildDate>
<item>
  <title>Week 11: Minerva Modeling Week A</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/11_Minerva/</link>
  <description><![CDATA[ 




<p>The next couple of weeks will be used to introduce MINERVA II, an instance-based computational model of memory. I’ve mentioned a few times throughout the semester that the picture memory experiments we’ve been discussing will be used to test predictions of a model of memory. We will spend the next few weeks learning about this model, and eventually using it to make predictions about recognition memory for pictures.</p>
<p>Here is a general plan for the next three weeks:</p>
<p>Week A: Get some general familiarity with the model. This will involve reading a couple papers about the MINERVA II model, and working through a learning module about this topic that I developed for an intro to cognition course. Attempt to implement a really basic version of the model in Microsoft Excel or Google sheets by following a tutorial</p>
<p>Week B: Follow along with a tutorial that I will post about how to implement a MINERVA II model in the R programming language. Our goal will be to model a generic recognition memory procedure. We will create a set of items, present the model with some of the items, and then give it a recognition memory to see if it can tell the difference between new and old items</p>
<p>Week C: By week 3 we should be in a position to put digital representations of pictures into a MINERVA II memory model, and then simulate a recognition memory procedure for pictures. This simulation will allow us to make predictions from the theory about performance in picture recognition memory tasks.</p>
<p>Let’s get started.</p>
<section id="week-1-general-familiarity-with-minerva-ii" class="level2">
<h2 class="anchored" data-anchor-id="week-1-general-familiarity-with-minerva-ii">Week 1: General familiarity with MINERVA II</h2>
<p>I am assigning two major readings to cover the next three weeks. Both of these are on our zotero group, and I will email them around.</p>
<ol type="1">
<li>Jamieson, R. K., Johns, B. T., Vokey, J. R., &amp; Jones, M. N. (2022). Instance theory as a domain-general framework for cognitive psychology. Nature Reviews Psychology. https://doi.org/10.1038/s44159-022-00025-3</li>
</ol>
<ul>
<li>This is a recent review paper that gives a broad overview of instance theory, as well as many ways in which MINERVA style models have been applied across cognition</li>
</ul>
<ol start="2" type="1">
<li>Hintzman, D. L. (1986). “Schema Abstraction” in a Multiple-Trace Memory Model. Psychological Review, 93, 411–428. https://doi.org/10/bzdsr4</li>
</ol>
<ul>
<li>This is one of the original papers describing the MINERVA II model</li>
</ul>
<p>I expect both of these paper may be somewhat challenging reads. Don’t get too discouraged, as we will talk about the concepts in them in our meeting, and in some video tutorials.</p>
<p>I have also made some supporting video lectures and tutorials for this topic that you can find here:</p>
<p><a href="https://www.crumplab.com/cognition/articles/modules/L11_Instance_Theory.html" class="uri">https://www.crumplab.com/cognition/articles/modules/L11_Instance_Theory.html</a></p>
</section>
<section id="week-1-assignment" class="level2">
<h2 class="anchored" data-anchor-id="week-1-assignment">Week 1 Assignment</h2>
<ol type="1">
<li><p>Read at least one of the papers above and take notes on your blog</p></li>
<li><p>Follow the excel assignment from the link above to create a basic MINERVA II in excel.</p></li>
<li><p>If you want to work ahead, you could try to implement a MINERVA II model in R. Note that I will be creating tutorials for how to do this in R for next week.</p></li>
</ol>


</section>

 ]]></description>
  <category>Psyc 2001</category>
  <category>MINERVA II</category>
  <guid>https://crumplab.com/psyc2001/blog/11_Minerva/</guid>
  <pubDate>Fri, 10 Nov 2023 05:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/11_Minerva/week11.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week 12: Minerva Modeling Week B</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/12_Minerva/</link>
  <description><![CDATA[ 




<p>We are on Week B of learning about instance theory and MINERVA II.</p>
<p>Week B: Follow along with a tutorial that I will post about how to implement a MINERVA II model in the R programming language. Our goal will be to model a generic recognition memory procedure. We will create a set of items, present the model with some of the items, and then give it a recognition memory to see if it can tell the difference between new and old items</p>
<p>Week C: By week 3 we should be in a position to put digital representations of pictures into a MINERVA II memory model, and then simulate a recognition memory procedure for pictures. This simulation will allow us to make predictions from the theory about performance in picture recognition memory tasks.</p>
<p>Let’s get started.</p>
<section id="week-b-follow-along-with-this-tutorial" class="level2">
<h2 class="anchored" data-anchor-id="week-b-follow-along-with-this-tutorial">Week B: Follow along with this tutorial</h2>
<p>Below you will find a screencast and some R code that implements a MINERVA II model. The goal for this assignment is to attempt to get the code working in your blog post.</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/hfTM_Yu0rto" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</section>
<section id="install-libraries" class="level2">
<h2 class="anchored" data-anchor-id="install-libraries">Install libraries</h2>
<p>You will need to install the following libraries:</p>
<ol type="1">
<li>devtools</li>
<li>RsemanticLibrarian</li>
<li>lsa</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'devtools'</span>)</span>
<span id="cb1-2">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CrumpLab/RsemanticLibrarian"</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lsa'</span>)</span></code></pre></div>
</div>
</section>
<section id="basic-minerva-ii-model" class="level2">
<h2 class="anchored" data-anchor-id="basic-minerva-ii-model">Basic MINERVA II model</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">vector_length <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb2-2">num_items <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make random feature vectors for each item</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rows are items</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Columns are features</span></span>
<span id="cb2-7">items <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(num_items,</span>
<span id="cb2-8">                   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>( <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), vector_length<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) )</span>
<span id="cb2-9">                   ))</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define indices for old and new items</span></span>
<span id="cb2-12">old <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb2-13">new <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put old items into a memory matrix</span></span>
<span id="cb2-16">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> items[old,]</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get an item to probe memory</span></span>
<span id="cb2-19">probe_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb2-20">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> items[probe_id,]</span>
<span id="cb2-21"></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb2-23">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb2-24"></span>
<span id="cb2-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># activate traces by weighted similarity</span></span>
<span id="cb2-26">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> memory <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(similarities)</span>
<span id="cb2-27"></span>
<span id="cb2-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate echo and global activation</span></span>
<span id="cb2-29">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(activations)</span>
<span id="cb2-30">global_activation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(similarities)</span>
<span id="cb2-31"></span>
<span id="cb2-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compare echo to probe</span></span>
<span id="cb2-33">lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(probe,echo)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>          [,1]
[1,] 0.8531015</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">global_activation</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.224</code></pre>
</div>
</div>
</section>
<section id="generate-all-unique-items" class="level2">
<h2 class="anchored" data-anchor-id="generate-all-unique-items">Generate all unique items</h2>
<p>In the above code, feature vectors for each item were generated completely randomly. As a result, it is possible that different items were coded as being identical. This would happen if they were randomly assigned the same feature vector. The function below can be used to generate sets of feature vectors that are all unique.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">generate_unique_random_items <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_items =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb6-2">                                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vector_length =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>){</span>
<span id="cb6-3">  items <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(num_items,</span>
<span id="cb6-4">                   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>( <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), vector_length<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) )</span>
<span id="cb6-5">                   ))</span>
<span id="cb6-6"></span>
<span id="cb6-7">  correlation_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(items))</span>
<span id="cb6-8">  upper_triangle <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> correlation_matrix[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">upper.tri</span>(correlation_matrix)]</span>
<span id="cb6-9">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(upper_triangle[upper_triangle <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb6-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(items)</span>
<span id="cb6-11">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb6-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_unique_random_items</span>(num_items,vector_length)</span>
<span id="cb6-14">  }</span>
<span id="cb6-15"></span>
<span id="cb6-16">}</span>
<span id="cb6-17"></span>
<span id="cb6-18">items <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_unique_random_items</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_items =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vector_length =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
</div>
</section>
<section id="evaluating-recognition-memory-for-items" class="level2">
<h2 class="anchored" data-anchor-id="evaluating-recognition-memory-for-items">Evaluating recognition memory for items</h2>
<p>General goals:</p>
<ol type="1">
<li>create 100 unique random feature vectors to represent 100 different items that could be presented in a recognition memory experiment.</li>
<li>Create a memory that gets the first 50 items as traces in the memory. This mimics an encoding phase where a person is shown different items</li>
<li>Conduct a simulation to mimic a recognition memory test. This involves presented new and old items as cues, and generating responses from the memory.</li>
<li>Evaluate the models performance to see if can discriminate between old and new items.</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">vector_length <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb7-2">num_items <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make random feature vectors for each item</span></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rows are items</span></span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Columns are features</span></span>
<span id="cb7-7">items <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> items <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_unique_random_items</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_items =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vector_length =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define indices for old and new items</span></span>
<span id="cb7-10">old <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb7-11">new <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb7-12"></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put old items into a memory matrix</span></span>
<span id="cb7-14">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> items[old,]</span>
<span id="cb7-15"></span>
<span id="cb7-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a data frame to hold model results</span></span>
<span id="cb7-17">simulation_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>()</span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## loop through all items as cues to memory</span></span>
<span id="cb7-20"></span>
<span id="cb7-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>){</span>
<span id="cb7-22">     </span>
<span id="cb7-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get an item to probe memory</span></span>
<span id="cb7-24">  probe_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> i</span>
<span id="cb7-25">  probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> items[probe_id,]</span>
<span id="cb7-26">  </span>
<span id="cb7-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb7-28">  similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb7-29">  </span>
<span id="cb7-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># activate traces by weighted similarity</span></span>
<span id="cb7-31">  activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> memory <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(similarities)</span>
<span id="cb7-32">  </span>
<span id="cb7-33">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate echo and global activation</span></span>
<span id="cb7-34">  echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(activations)</span>
<span id="cb7-35">  global_activation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(similarities)</span>
<span id="cb7-36">  </span>
<span id="cb7-37">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compare echo to probe</span></span>
<span id="cb7-38">  echo_cue_similarity <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(probe,echo)</span>
<span id="cb7-39">  </span>
<span id="cb7-40">  trial_results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">item =</span> i,</span>
<span id="cb7-41">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">global_activation =</span> global_activation,</span>
<span id="cb7-42">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">echo_cue_similarity =</span> echo_cue_similarity)</span>
<span id="cb7-43">  </span>
<span id="cb7-44">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add trial results to simulation data frame</span></span>
<span id="cb7-45">  simulation_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(simulation_data,trial_results)</span>
<span id="cb7-46">}</span>
<span id="cb7-47"></span>
<span id="cb7-48"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb7-49"></span>
<span id="cb7-50">simulation_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> simulation_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-51">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">item_type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"old"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"new"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>))</span>
<span id="cb7-52"></span>
<span id="cb7-53">simulation_means <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> simulation_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-54">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(item_type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-55">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_echo_cue_similarity =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(echo_cue_similarity),</span>
<span id="cb7-56">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_global_activation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(global_activation))</span>
<span id="cb7-57"></span>
<span id="cb7-58">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(simulation_means)</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">item_type</th>
<th style="text-align: right;">mean_echo_cue_similarity</th>
<th style="text-align: right;">mean_global_activation</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">new</td>
<td style="text-align: right;">0.8201426</td>
<td style="text-align: right;">-0.09072</td>
</tr>
<tr class="even">
<td style="text-align: left;">old</td>
<td style="text-align: right;">0.9822993</td>
<td style="text-align: right;">1.09344</td>
</tr>
</tbody>
</table>
</div>
</div>


</section>

 ]]></description>
  <category>Psyc 2001</category>
  <category>MINERVA II</category>
  <guid>https://crumplab.com/psyc2001/blog/12_Minerva/</guid>
  <pubDate>Fri, 10 Nov 2023 05:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/12_Minerva/week11.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week 10: Picture Memorability</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/10_memorability/</link>
  <description><![CDATA[ 




<p>The reading for this week is:</p>
<p>Isola, P., Xiao, J., Torralba, A., &amp; Oliva, A. (2011). What makes an image memorable? Computer Vision and Pattern Recognition (CVPR), 2011 IEEE Conference On, 145–152.</p>
<p>The paper is on the group shared zotero and I will email it to everyone.</p>
<section id="assignment" class="level2">
<h2 class="anchored" data-anchor-id="assignment">Assignment</h2>
<ol type="1">
<li><p>Read the paper and take notes on your blog.</p></li>
<li><p>Develop an experiment proposal</p></li>
</ol>
<p>The reading provides some compelling evidence that some images are inherently more memorable than other images. The purpose of your experiment proposal is to brainstorm a way to test the limits of this memorability effect.</p>
<p>One example that we discussed in class was the idea of within-subject test-retest reliability. For example, if we ran a version of the above experiment on the same group of people twice, would they find a high correlation between the picture memorability rankings on the first and second test? According to the notion that some pictures are inherently more memorable than others, we would expect a relatively strong positive correlation.</p>
<p>Your task to consider other potential ways to test the limits of the memorability effect. This would involve running a similar kind of experiment as above, but manipulating some additional aspects to determine how stable or generalizable the effect is to other conditions.</p>
<p>Have fun, and it is OK to brainstorm more than one experiment idea.</p>


</section>

 ]]></description>
  <category>Psyc 2001</category>
  <category>Pictures</category>
  <category>Recognition Memory</category>
  <guid>https://crumplab.com/psyc2001/blog/10_memorability/</guid>
  <pubDate>Mon, 06 Nov 2023 05:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/10_memorability/week10.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week 9: Orientation effects and algorithms for a continuous recognition procedure</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/9_continuous/</link>
  <description><![CDATA[ 




<p>As a quick recap. In our meeting yesterday we tried a pilot version of a continuous recognition memory procedure for pictures with different levels of noise added.</p>
<p>I am still in the process of addressing some of the design issues in that experiment that we discussed, and I expect to be finished with that by early next week. Once I have a finalized version I will email you all a link to try the study one more time, and we will look at the data next week.</p>
<p>In addition, the assignment for this week is for you to do a little bit of research yourself, this time on rotation and orientation effects.</p>
<p>Many studies have shown that inverted or rotated stimuli may impair memory. Your first task is to read the very short paper (which is attached and in the zotero group library):</p>
<p>Scapinello, K. F., &amp; Yarmey, A. D. (1970). The role of familiarity and orientation in immediate and delayed recognition of pictorial stimuli. Psychonomic Science, 21(6), 329–330.</p>
<p>Then use google scholar, or some other method (e.g., the references from the above paper), to find another paper investigating how rotation or inversion may impact recognition memory.</p>
<p>Make a blog post taking notes about the paper, and describing the extra paper that you found. After we finish the pictures in noise experiment, we’ll move on to making an experiment that attempts to replicate rotation effects.</p>
<section id="advanced" class="level2">
<h2 class="anchored" data-anchor-id="advanced">Advanced</h2>
<p>This section is not required, but may be of some interest (e.g., you could decide to work on this problem this week instead of the above). In a continuous recognition procedure items are presented one at time and a participants judges whether the item is new or old. A new item is one that has never been presented before. An old item is a repetition of a previously presented item.</p>
<p>The experiment that we tried in class was an example of a continuous recognition procedure. One of the issues with this design is controlling the mixture of new and old items in the sequence of trials. In our pilot experiment, there was a noticeable bias in our sequence. Specifically, most of the early trials were new items and most of later trials were old items.</p>
<p>The advanced problem is to consider our approach to the sequencing of new and old items. Ideally, we should be able to control:</p>
<ol type="1">
<li>The proportion of new and old items (e.g.&nbsp;50% each).</li>
<li>The lag between repetitions. That is how many other items are between first and second presentations.</li>
<li>Avoiding long runs of all new or all old</li>
</ol>
<p>Here is an example approach that solves some of the problem, but not all of them.</p>
<p>Let’s say we have 100 pictures, represented here by the numbers 1 to 100</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">all_pictures <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span></code></pre></div>
</div>
<p>I will use R to duplicate the set of numbers, and then randomly shuffle the order. This process ensures that each item (1 to 100) is presented twice in a random order. As a result, there would be 100 new trials (the first time you see a particular number), and 100 old trials (the second time you a particular number).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">trial_sequence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span></code></pre></div>
</div>
<p>However, simply shuffling the values randomly produces some other issues. The code chunk below analyzes the above 200 trial sequence to determine whether a particular trial is a new or old item. If the item is old, the lag between presentations is also computed.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>()</span>
<span id="cb3-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>){</span>
<span id="cb3-3">  num_positions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(trial_sequence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> trial_sequence[i])</span>
<span id="cb3-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> num_positions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) {</span>
<span id="cb3-5">    type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"new"</span></span>
<span id="cb3-6">    lag <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb3-7">  }</span>
<span id="cb3-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> num_positions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) {</span>
<span id="cb3-9">    type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"old"</span></span>
<span id="cb3-10">    lag <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> num_positions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> num_positions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb3-11">  }</span>
<span id="cb3-12">  t_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trial =</span> i,</span>
<span id="cb3-13">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">item =</span> trial_sequence[i],</span>
<span id="cb3-14">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> type,</span>
<span id="cb3-15">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lag =</span> lag</span>
<span id="cb3-16">                     )</span>
<span id="cb3-17">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(df,t_df)</span>
<span id="cb3-18">}</span></code></pre></div>
</div>
<p>This results in a data frame codes properties of the trial sequence. Notice that most of the beginning trials are new items, and most of the ending trials are old items.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(df)</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: right;">trial</th>
<th style="text-align: right;">item</th>
<th style="text-align: left;">type</th>
<th style="text-align: right;">lag</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">1</td>
<td style="text-align: right;">78</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">2</td>
<td style="text-align: right;">3</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">3</td>
<td style="text-align: right;">19</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">4</td>
<td style="text-align: right;">57</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">5</td>
<td style="text-align: right;">38</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">6</td>
<td style="text-align: right;">10</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">7</td>
<td style="text-align: right;">77</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">8</td>
<td style="text-align: right;">66</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">9</td>
<td style="text-align: right;">28</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">10</td>
<td style="text-align: right;">22</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">11</td>
<td style="text-align: right;">13</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">12</td>
<td style="text-align: right;">97</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">13</td>
<td style="text-align: right;">44</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">14</td>
<td style="text-align: right;">35</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">15</td>
<td style="text-align: right;">6</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">16</td>
<td style="text-align: right;">57</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">12</td>
</tr>
<tr class="odd">
<td style="text-align: right;">17</td>
<td style="text-align: right;">74</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">18</td>
<td style="text-align: right;">56</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">19</td>
<td style="text-align: right;">25</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">20</td>
<td style="text-align: right;">8</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">21</td>
<td style="text-align: right;">89</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">22</td>
<td style="text-align: right;">79</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">23</td>
<td style="text-align: right;">24</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">24</td>
<td style="text-align: right;">25</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">5</td>
</tr>
<tr class="odd">
<td style="text-align: right;">25</td>
<td style="text-align: right;">26</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">26</td>
<td style="text-align: right;">67</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">27</td>
<td style="text-align: right;">53</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">28</td>
<td style="text-align: right;">15</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">29</td>
<td style="text-align: right;">64</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">30</td>
<td style="text-align: right;">27</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">31</td>
<td style="text-align: right;">37</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">32</td>
<td style="text-align: right;">3</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">30</td>
</tr>
<tr class="odd">
<td style="text-align: right;">33</td>
<td style="text-align: right;">43</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">34</td>
<td style="text-align: right;">92</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">35</td>
<td style="text-align: right;">76</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">36</td>
<td style="text-align: right;">21</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">37</td>
<td style="text-align: right;">39</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">38</td>
<td style="text-align: right;">49</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">39</td>
<td style="text-align: right;">58</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">40</td>
<td style="text-align: right;">44</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">27</td>
</tr>
<tr class="odd">
<td style="text-align: right;">41</td>
<td style="text-align: right;">72</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">42</td>
<td style="text-align: right;">45</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">43</td>
<td style="text-align: right;">73</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">44</td>
<td style="text-align: right;">43</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">11</td>
</tr>
<tr class="odd">
<td style="text-align: right;">45</td>
<td style="text-align: right;">13</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">34</td>
</tr>
<tr class="even">
<td style="text-align: right;">46</td>
<td style="text-align: right;">52</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">47</td>
<td style="text-align: right;">60</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">48</td>
<td style="text-align: right;">35</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">34</td>
</tr>
<tr class="odd">
<td style="text-align: right;">49</td>
<td style="text-align: right;">4</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">50</td>
<td style="text-align: right;">39</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">13</td>
</tr>
<tr class="odd">
<td style="text-align: right;">51</td>
<td style="text-align: right;">56</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">33</td>
</tr>
<tr class="even">
<td style="text-align: right;">52</td>
<td style="text-align: right;">1</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">53</td>
<td style="text-align: right;">22</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">43</td>
</tr>
<tr class="even">
<td style="text-align: right;">54</td>
<td style="text-align: right;">4</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">5</td>
</tr>
<tr class="odd">
<td style="text-align: right;">55</td>
<td style="text-align: right;">36</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">56</td>
<td style="text-align: right;">45</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">14</td>
</tr>
<tr class="odd">
<td style="text-align: right;">57</td>
<td style="text-align: right;">33</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">58</td>
<td style="text-align: right;">62</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">59</td>
<td style="text-align: right;">88</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">60</td>
<td style="text-align: right;">91</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">61</td>
<td style="text-align: right;">83</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">62</td>
<td style="text-align: right;">61</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">63</td>
<td style="text-align: right;">97</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">51</td>
</tr>
<tr class="even">
<td style="text-align: right;">64</td>
<td style="text-align: right;">79</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">42</td>
</tr>
<tr class="odd">
<td style="text-align: right;">65</td>
<td style="text-align: right;">65</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">66</td>
<td style="text-align: right;">38</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">61</td>
</tr>
<tr class="odd">
<td style="text-align: right;">67</td>
<td style="text-align: right;">95</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">68</td>
<td style="text-align: right;">20</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">69</td>
<td style="text-align: right;">90</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">70</td>
<td style="text-align: right;">95</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">3</td>
</tr>
<tr class="odd">
<td style="text-align: right;">71</td>
<td style="text-align: right;">53</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">44</td>
</tr>
<tr class="even">
<td style="text-align: right;">72</td>
<td style="text-align: right;">41</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">73</td>
<td style="text-align: right;">59</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">74</td>
<td style="text-align: right;">47</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">75</td>
<td style="text-align: right;">16</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">76</td>
<td style="text-align: right;">40</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">77</td>
<td style="text-align: right;">9</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">78</td>
<td style="text-align: right;">67</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">52</td>
</tr>
<tr class="odd">
<td style="text-align: right;">79</td>
<td style="text-align: right;">32</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">80</td>
<td style="text-align: right;">27</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">50</td>
</tr>
<tr class="odd">
<td style="text-align: right;">81</td>
<td style="text-align: right;">40</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">5</td>
</tr>
<tr class="even">
<td style="text-align: right;">82</td>
<td style="text-align: right;">47</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">8</td>
</tr>
<tr class="odd">
<td style="text-align: right;">83</td>
<td style="text-align: right;">72</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">42</td>
</tr>
<tr class="even">
<td style="text-align: right;">84</td>
<td style="text-align: right;">30</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">85</td>
<td style="text-align: right;">32</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">6</td>
</tr>
<tr class="even">
<td style="text-align: right;">86</td>
<td style="text-align: right;">70</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">87</td>
<td style="text-align: right;">93</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">88</td>
<td style="text-align: right;">49</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">50</td>
</tr>
<tr class="odd">
<td style="text-align: right;">89</td>
<td style="text-align: right;">64</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">60</td>
</tr>
<tr class="even">
<td style="text-align: right;">90</td>
<td style="text-align: right;">75</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">91</td>
<td style="text-align: right;">84</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">92</td>
<td style="text-align: right;">98</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">93</td>
<td style="text-align: right;">34</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">94</td>
<td style="text-align: right;">11</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">95</td>
<td style="text-align: right;">96</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">96</td>
<td style="text-align: right;">82</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">97</td>
<td style="text-align: right;">84</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">6</td>
</tr>
<tr class="even">
<td style="text-align: right;">98</td>
<td style="text-align: right;">69</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">99</td>
<td style="text-align: right;">94</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">100</td>
<td style="text-align: right;">55</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">101</td>
<td style="text-align: right;">60</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">54</td>
</tr>
<tr class="even">
<td style="text-align: right;">102</td>
<td style="text-align: right;">6</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">87</td>
</tr>
<tr class="odd">
<td style="text-align: right;">103</td>
<td style="text-align: right;">51</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">104</td>
<td style="text-align: right;">23</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">105</td>
<td style="text-align: right;">52</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">59</td>
</tr>
<tr class="even">
<td style="text-align: right;">106</td>
<td style="text-align: right;">54</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">107</td>
<td style="text-align: right;">98</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">15</td>
</tr>
<tr class="even">
<td style="text-align: right;">108</td>
<td style="text-align: right;">99</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">109</td>
<td style="text-align: right;">87</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">110</td>
<td style="text-align: right;">42</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">111</td>
<td style="text-align: right;">17</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">112</td>
<td style="text-align: right;">34</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">19</td>
</tr>
<tr class="odd">
<td style="text-align: right;">113</td>
<td style="text-align: right;">86</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">114</td>
<td style="text-align: right;">16</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">39</td>
</tr>
<tr class="odd">
<td style="text-align: right;">115</td>
<td style="text-align: right;">69</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">17</td>
</tr>
<tr class="even">
<td style="text-align: right;">116</td>
<td style="text-align: right;">100</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">117</td>
<td style="text-align: right;">74</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">100</td>
</tr>
<tr class="even">
<td style="text-align: right;">118</td>
<td style="text-align: right;">93</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">31</td>
</tr>
<tr class="odd">
<td style="text-align: right;">119</td>
<td style="text-align: right;">33</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">62</td>
</tr>
<tr class="even">
<td style="text-align: right;">120</td>
<td style="text-align: right;">76</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">85</td>
</tr>
<tr class="odd">
<td style="text-align: right;">121</td>
<td style="text-align: right;">7</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">122</td>
<td style="text-align: right;">90</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">53</td>
</tr>
<tr class="odd">
<td style="text-align: right;">123</td>
<td style="text-align: right;">10</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">117</td>
</tr>
<tr class="even">
<td style="text-align: right;">124</td>
<td style="text-align: right;">86</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">11</td>
</tr>
<tr class="odd">
<td style="text-align: right;">125</td>
<td style="text-align: right;">48</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">126</td>
<td style="text-align: right;">42</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">16</td>
</tr>
<tr class="odd">
<td style="text-align: right;">127</td>
<td style="text-align: right;">87</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">18</td>
</tr>
<tr class="even">
<td style="text-align: right;">128</td>
<td style="text-align: right;">18</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">129</td>
<td style="text-align: right;">8</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">109</td>
</tr>
<tr class="even">
<td style="text-align: right;">130</td>
<td style="text-align: right;">2</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">131</td>
<td style="text-align: right;">75</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">41</td>
</tr>
<tr class="even">
<td style="text-align: right;">132</td>
<td style="text-align: right;">70</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">46</td>
</tr>
<tr class="odd">
<td style="text-align: right;">133</td>
<td style="text-align: right;">31</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">134</td>
<td style="text-align: right;">14</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">135</td>
<td style="text-align: right;">1</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">83</td>
</tr>
<tr class="even">
<td style="text-align: right;">136</td>
<td style="text-align: right;">46</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">137</td>
<td style="text-align: right;">68</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">138</td>
<td style="text-align: right;">63</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">139</td>
<td style="text-align: right;">81</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">140</td>
<td style="text-align: right;">100</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">24</td>
</tr>
<tr class="odd">
<td style="text-align: right;">141</td>
<td style="text-align: right;">89</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">120</td>
</tr>
<tr class="even">
<td style="text-align: right;">142</td>
<td style="text-align: right;">46</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">6</td>
</tr>
<tr class="odd">
<td style="text-align: right;">143</td>
<td style="text-align: right;">54</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">37</td>
</tr>
<tr class="even">
<td style="text-align: right;">144</td>
<td style="text-align: right;">29</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">145</td>
<td style="text-align: right;">82</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">49</td>
</tr>
<tr class="even">
<td style="text-align: right;">146</td>
<td style="text-align: right;">12</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">147</td>
<td style="text-align: right;">58</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">108</td>
</tr>
<tr class="even">
<td style="text-align: right;">148</td>
<td style="text-align: right;">68</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">11</td>
</tr>
<tr class="odd">
<td style="text-align: right;">149</td>
<td style="text-align: right;">12</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">3</td>
</tr>
<tr class="even">
<td style="text-align: right;">150</td>
<td style="text-align: right;">94</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">51</td>
</tr>
<tr class="odd">
<td style="text-align: right;">151</td>
<td style="text-align: right;">62</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">93</td>
</tr>
<tr class="even">
<td style="text-align: right;">152</td>
<td style="text-align: right;">50</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="odd">
<td style="text-align: right;">153</td>
<td style="text-align: right;">71</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">154</td>
<td style="text-align: right;">61</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">92</td>
</tr>
<tr class="odd">
<td style="text-align: right;">155</td>
<td style="text-align: right;">18</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">27</td>
</tr>
<tr class="even">
<td style="text-align: right;">156</td>
<td style="text-align: right;">59</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">83</td>
</tr>
<tr class="odd">
<td style="text-align: right;">157</td>
<td style="text-align: right;">80</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">158</td>
<td style="text-align: right;">31</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">25</td>
</tr>
<tr class="odd">
<td style="text-align: right;">159</td>
<td style="text-align: right;">85</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">160</td>
<td style="text-align: right;">29</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">16</td>
</tr>
<tr class="odd">
<td style="text-align: right;">161</td>
<td style="text-align: right;">51</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">58</td>
</tr>
<tr class="even">
<td style="text-align: right;">162</td>
<td style="text-align: right;">48</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">37</td>
</tr>
<tr class="odd">
<td style="text-align: right;">163</td>
<td style="text-align: right;">85</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">4</td>
</tr>
<tr class="even">
<td style="text-align: right;">164</td>
<td style="text-align: right;">41</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">92</td>
</tr>
<tr class="odd">
<td style="text-align: right;">165</td>
<td style="text-align: right;">15</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">137</td>
</tr>
<tr class="even">
<td style="text-align: right;">166</td>
<td style="text-align: right;">26</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">141</td>
</tr>
<tr class="odd">
<td style="text-align: right;">167</td>
<td style="text-align: right;">92</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">133</td>
</tr>
<tr class="even">
<td style="text-align: right;">168</td>
<td style="text-align: right;">80</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">11</td>
</tr>
<tr class="odd">
<td style="text-align: right;">169</td>
<td style="text-align: right;">83</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">108</td>
</tr>
<tr class="even">
<td style="text-align: right;">170</td>
<td style="text-align: right;">2</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">40</td>
</tr>
<tr class="odd">
<td style="text-align: right;">171</td>
<td style="text-align: right;">71</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">18</td>
</tr>
<tr class="even">
<td style="text-align: right;">172</td>
<td style="text-align: right;">99</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">64</td>
</tr>
<tr class="odd">
<td style="text-align: right;">173</td>
<td style="text-align: right;">66</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">165</td>
</tr>
<tr class="even">
<td style="text-align: right;">174</td>
<td style="text-align: right;">63</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">36</td>
</tr>
<tr class="odd">
<td style="text-align: right;">175</td>
<td style="text-align: right;">30</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">91</td>
</tr>
<tr class="even">
<td style="text-align: right;">176</td>
<td style="text-align: right;">17</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">65</td>
</tr>
<tr class="odd">
<td style="text-align: right;">177</td>
<td style="text-align: right;">50</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">25</td>
</tr>
<tr class="even">
<td style="text-align: right;">178</td>
<td style="text-align: right;">37</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">147</td>
</tr>
<tr class="odd">
<td style="text-align: right;">179</td>
<td style="text-align: right;">81</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">40</td>
</tr>
<tr class="even">
<td style="text-align: right;">180</td>
<td style="text-align: right;">20</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">112</td>
</tr>
<tr class="odd">
<td style="text-align: right;">181</td>
<td style="text-align: right;">73</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">138</td>
</tr>
<tr class="even">
<td style="text-align: right;">182</td>
<td style="text-align: right;">77</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">175</td>
</tr>
<tr class="odd">
<td style="text-align: right;">183</td>
<td style="text-align: right;">28</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">174</td>
</tr>
<tr class="even">
<td style="text-align: right;">184</td>
<td style="text-align: right;">21</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">148</td>
</tr>
<tr class="odd">
<td style="text-align: right;">185</td>
<td style="text-align: right;">5</td>
<td style="text-align: left;">new</td>
<td style="text-align: right;">NA</td>
</tr>
<tr class="even">
<td style="text-align: right;">186</td>
<td style="text-align: right;">11</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">92</td>
</tr>
<tr class="odd">
<td style="text-align: right;">187</td>
<td style="text-align: right;">96</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">92</td>
</tr>
<tr class="even">
<td style="text-align: right;">188</td>
<td style="text-align: right;">14</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">54</td>
</tr>
<tr class="odd">
<td style="text-align: right;">189</td>
<td style="text-align: right;">78</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">188</td>
</tr>
<tr class="even">
<td style="text-align: right;">190</td>
<td style="text-align: right;">9</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">113</td>
</tr>
<tr class="odd">
<td style="text-align: right;">191</td>
<td style="text-align: right;">91</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">131</td>
</tr>
<tr class="even">
<td style="text-align: right;">192</td>
<td style="text-align: right;">36</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">137</td>
</tr>
<tr class="odd">
<td style="text-align: right;">193</td>
<td style="text-align: right;">55</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">93</td>
</tr>
<tr class="even">
<td style="text-align: right;">194</td>
<td style="text-align: right;">19</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">191</td>
</tr>
<tr class="odd">
<td style="text-align: right;">195</td>
<td style="text-align: right;">65</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">130</td>
</tr>
<tr class="even">
<td style="text-align: right;">196</td>
<td style="text-align: right;">24</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">173</td>
</tr>
<tr class="odd">
<td style="text-align: right;">197</td>
<td style="text-align: right;">7</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">76</td>
</tr>
<tr class="even">
<td style="text-align: right;">198</td>
<td style="text-align: right;">5</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">13</td>
</tr>
<tr class="odd">
<td style="text-align: right;">199</td>
<td style="text-align: right;">88</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">140</td>
</tr>
<tr class="even">
<td style="text-align: right;">200</td>
<td style="text-align: right;">23</td>
<td style="text-align: left;">old</td>
<td style="text-align: right;">96</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>We can also look at the distribution of lags for old items. The random shuffling produced a wide range of lags, including very short lags.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lag)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-539a35d47e664c97a50115a146a7f1bd-1" class="quarto-figure quarto-figure-center anchored" width="672">
<figure class="quarto-float quarto-float-fig figure">
<div>
<img src="https://crumplab.com/psyc2001/blog/9_continuous/index_files/figure-html/unnamed-chunk-5-1.png" id="fig-539a35d47e664c97a50115a146a7f1bd-1" class="img-fluid figure-img" width="672">
</div>
</figure>
</div>
</div>
</div>
</section>
<section id="next-steps" class="level2">
<h2 class="anchored" data-anchor-id="next-steps">Next steps</h2>
<p>Ideally we want to create a different way of mixing items together that allows:</p>
<ol type="1">
<li><p>Reduction of bias toward new/old items across the sequence. The beginning shouldn’t be mostly new items, and the end shouldn’t be mostly old.</p></li>
<li><p>More control over the lags between first and second presentation of an item. For example, all items might have a minimum lag of 50 or greater.</p></li>
</ol>
<p>I’ll be working on solutions to this problem, and feel free to try your own as your work for this week. The solution to this type of problem requires an algorithm for mixing the items, and then some analysis of the sequence to show that it expresses the desired properties.</p>
<p>One of the papers in our zotero group library used a continuous recognition procedure, and their method section describes an approach that involves “test” items, and “filler” items. Here’s the reference:</p>
<p>Isola, P., Xiao, J., Torralba, A., &amp; Oliva, A. (2011). What makes an image memorable? Computer Vision and Pattern Recognition (CVPR), 2011 IEEE Conference On, 145–152.</p>
</section>
<section id="updates" class="level2">
<h2 class="anchored" data-anchor-id="updates">Updates</h2>
<p>Here’s what I came up with.</p>
<section id="verbal-description-of-algorithm" class="level3">
<h3 class="anchored" data-anchor-id="verbal-description-of-algorithm">Verbal description of algorithm</h3>
<p>This algorithm is designed to create a sequence of items with specific characteristics:</p>
<ol type="1">
<li><p>Choose a total of “n” items to be presented twice, for example, selecting 200 pictures for double presentation.</p></li>
<li><p>Define a minimum and maximum lag range, representing the number of items between the first and second presentation (e.g., a lag range of 50 to 100).</p></li>
<li><p>Calculate the total number of trials as the product of the number of pictures (n) times 2, and then add the maximum lag range (e.g., 200 * 2 + 100 = 500 trials).</p></li>
<li><p>Randomly distribute the first occurrences of the items within the first 400 trials (considering the maximum lag range) to avoid exceeding the trial limit.</p></li>
<li><p>Assign the remaining unassigned spots in the sequence to the second occurrences of each item. Iterate through the sequence, and for each first-occurrence item, find open positions within the specified lag range. Randomly choose one and fill it with the second occurrence of the current item. Repeat this process throughout the sequence.</p></li>
<li><p>Any remaining unassigned spots will be filled with “filler” items. The aim is to balance the beginning and end of the sequence to avoid bias toward new or old items. Here’s how it’s done:</p>
<ul>
<li>Filler items are introduced, which are additional items.</li>
<li>A small window of filler items is selected (e.g., four filler items).</li>
<li>The array of filler items is doubled, and the order is shuffled (e.g., 1,2,3,4,1,2,3,4 -&gt; 1,3,2,2,4,3,1,4).</li>
<li>Filler items are assigned to the missing values in the trial sequence based on these shuffled indices.</li>
<li>This process is repeated across the entire sequence to incorporate new sets of filler items.</li>
</ul></li>
</ol>
<p>In summary, the algorithm is designed to generate a sequence of items, ensuring that first and second occurrences of items are appropriately spaced and filling any gaps with filler items to avoid bias of old vs new items at the beginning and end of the sequence.</p>
</section>
<section id="r-code-version" class="level3">
<h3 class="anchored" data-anchor-id="r-code-version">R code version</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set total number of items that will be repeated</span></span>
<span id="cb6-2">n_items <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set range of possible lags</span></span>
<span id="cb6-4">lag_range <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate total_trials needed</span></span>
<span id="cb6-6">total_trials <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (n_items<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>lag_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># spread out the first occurrences of each item across the first 400 positions. This ensures a relatively uniform mixture of new items across the first 400 trials.</span></span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initial_spread has 500 slots, 1s are randomly assigned to 200 positions within the first 400 slots. 0s are assigned everywhere else.</span></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1s indicate that an item will receive its first presentation in that slot</span></span>
<span id="cb6-11">initial_spread <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>))),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) </span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create an empty vector to hold the trial sequence. </span></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The trial sequence will also have 500 slots, each slot will be filled with a integer representing a specific item (from 1 to 200, and greater than 200 for filler items)</span></span>
<span id="cb6-15">sequence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb6-16"></span>
<span id="cb6-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign first occurrences of each of the 200 items to the locations that had 1s.</span></span>
<span id="cb6-18">sequence[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(initial_spread <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span>
<span id="cb6-19"></span>
<span id="cb6-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get available spots, these are spots with 0s</span></span>
<span id="cb6-21">available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(initial_spread <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-22"></span>
<span id="cb6-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a vector to hold items that have already been presented twice</span></span>
<span id="cb6-24">old <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb6-25"></span>
<span id="cb6-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop across each item in sequence</span></span>
<span id="cb6-27"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sequence)){</span>
<span id="cb6-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make sure item is an integer</span></span>
<span id="cb6-29">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(sequence[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){ </span>
<span id="cb6-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make sure item hasn't been presented twice already</span></span>
<span id="cb6-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(sequence[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> old <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){ </span>
<span id="cb6-32">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># whatever item this is will be presented twice, add it to old</span></span>
<span id="cb6-33">      old <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(old,sequence[i])</span>
<span id="cb6-34">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get possible open spots that are within the lag range</span></span>
<span id="cb6-35">      possible_spots <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> available[available <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>lag_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> available <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>lag_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb6-36">      </span>
<span id="cb6-37">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># error checking if there are no spots left</span></span>
<span id="cb6-38">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(possible_spots) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb6-39">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(i)</span>
<span id="cb6-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb6-41">      }</span>
<span id="cb6-42">      </span>
<span id="cb6-43">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pick a random open spot</span></span>
<span id="cb6-44">      spot_choice <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(possible_spots)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb6-45">      </span>
<span id="cb6-46">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign the current item to the chosen spot</span></span>
<span id="cb6-47">      sequence[spot_choice] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sequence[i]</span>
<span id="cb6-48">      </span>
<span id="cb6-49">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update the available spots</span></span>
<span id="cb6-50">      initial_spread[spot_choice] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-51">      available <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(initial_spread <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-52">    }</span>
<span id="cb6-53">  }</span>
<span id="cb6-54">}</span>
<span id="cb6-55"></span>
<span id="cb6-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># At this point the sequence should be full of the values 1 to 200</span></span>
<span id="cb6-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with each value occurring twice</span></span>
<span id="cb6-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and with the lag between repetitions randomly assigned within the lag range</span></span>
<span id="cb6-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># all other values are NA, indicating no item has been assigned. </span></span>
<span id="cb6-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># These items need to be "filled" with non-critical items</span></span>
<span id="cb6-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># non-critical items will be extra items with much shorter lags</span></span>
<span id="cb6-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># they are included to balance the proportion of old/new items across the sequence</span></span>
<span id="cb6-63"></span>
<span id="cb6-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add fillers to NA</span></span>
<span id="cb6-65"></span>
<span id="cb6-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the number of NAs in the sequence</span></span>
<span id="cb6-67">num_NA <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sequence[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(sequence)])</span>
<span id="cb6-68"></span>
<span id="cb6-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make the count even</span></span>
<span id="cb6-70"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(num_NA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) num_NA <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  num_NA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-71"></span>
<span id="cb6-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># figure out how many sets will be needed</span></span>
<span id="cb6-73">blocks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ceiling</span>(num_NA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb6-74"></span>
<span id="cb6-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># randomly generate sets of item indices with short lags</span></span>
<span id="cb6-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make sure there is enough to cover all NAs</span></span>
<span id="cb6-77">new_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(blocks,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))))</span>
<span id="cb6-78">new_vals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>((blocks<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb6-79"></span>
<span id="cb6-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filler items are assigned values greater than 200</span></span>
<span id="cb6-81">NA_sequence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> new_vals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>new_order</span>
<span id="cb6-82"></span>
<span id="cb6-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add filler items to the sequence</span></span>
<span id="cb6-84">na_cnt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb6-85"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sequence)){</span>
<span id="cb6-86">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(sequence[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>){</span>
<span id="cb6-87">    na_cnt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> na_cnt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-88">    sequence[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> NA_sequence[na_cnt]</span>
<span id="cb6-89">  }</span>
<span id="cb6-90">}</span></code></pre></div>
</div>
<p>Print out example sequence</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(sequence)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  [1]   1   2   3 202 201   4 203   5   6   7   8   9  10 204 201  11  12  13
 [19]  14 202 204  15 203 206 207 207  16  17  18  19 208  20 205  21  22  23
 [37] 206  24  25 205 208  26  27  28  29 212  30 212 210 209  31  32  33 211
 [55]  34 210 209  35  36  37 211  38   4 213   5   9  39 216  40  41  42 215
 [73]  12  43  44  45  46 213  47   1  48 215  49  50  51  52  17 216  53  54
 [91]  14 214   3   2  55  56  57  13  11  15  58  59   8  60  10  61   6   7
[109]  62  63  18  16  64  65  66  67  68  69  24 214  19  23  25  70  30  71
[127]  20  72  28  73  21  35  74  22  26  75  27  76  45  77  29  33  40  46
[145]  42  31  78  47  32  34  79  80  81  36  82  44  83  37  84  43  38  85
[163]  86  39  87  88  41  89  90  53  91  54  49  56  50  92  93  94  48  51
[181]  52  95  59  96  97  60  58  57  98  55  99 100  64 101  62 102 217  63
[199]  65  69  66 103 104  68  61 105 106  67  75  71 107  79 108 109 110  70
[217] 111 220 112  76  73 113 219  72  74  78 114 115 116  90  77 117 118 217
[235] 119 120 121 122  83  81 218  84 123 124  82 125 126  80 127  86 128 129
[253]  87 130 131 132  88 133  92  85 134 102 104  93  89 218  96  91 135  95
[271] 106 101 136 219  94 137 138 139 140 107 220  98  97 111 141 142  99 143
[289] 223 100 110 103 144 145 146 108 124 147 148 149 150 105 151 152 153 154
[307] 155 156 109 157 158 128 159 112 160 115 116 161 125 162 113 114 163 117
[325] 164 165 166 122 120 118 167 119 121 168 127 169 170 131 130 171 123 172
[343] 173 174 175 126 129 176 140 134 132 133 177 139 178 179 141 224 147 136
[361] 137 180 142 138 181 182 183 135 221 184 185 156 186 187 188 149 158 189
[379] 144 160 190 191 192 143 193 157 194 145 159 150 146 195 155 148 196 197
[397] 198 199 200 153 151 154 152 223 161 165 221 172 164 166 167 175 222 224
[415] 162 222 179 163 227 183 226 228 169 168 227 171 226 170 225 178 228 174
[433] 225 229 173 231 232 232 185 230 181 187 180 230 194 229 176 184 231 233
[451] 235 177 191 186 192 235 234 196 234 182 233 198 236 200 190 189 236 188
[469] 238 240 240 197 193 237 237 239 238 195 239 243 244 244 243 241 242 241
[487] 242 247 248 245 246 247 248 246 245 199</code></pre>
</div>
</div>
</section>
</section>
<section id="to-do" class="level2">
<h2 class="anchored" data-anchor-id="to-do">To Do</h2>
<p>Come back and do some analyses of the sequence to show it has the properties we intend it to have. Note also, this algorithm would need to be implemented in javascript for our experiment (already done).</p>


</section>

 ]]></description>
  <category>Psyc 2001</category>
  <category>Pictures</category>
  <category>Recognition Memory</category>
  <guid>https://crumplab.com/psyc2001/blog/9_continuous/</guid>
  <pubDate>Sat, 28 Oct 2023 04:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/9_continuous/week9.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week 8: Recognition memory for degraded pictures</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/8_noisy_pictures/</link>
  <description><![CDATA[ 




<p>Throughout the rest of the semester we will be developing experiments around the theme of recognition memory for pictures.</p>
<p>This week there are two goals.</p>
<ol type="1">
<li><p>I will be programming a new experiment to measure how recognition memory for pictures varies as visual noise is added to the pictures. I will be sharing my code as we go. After I am finished I will share a link to the experiment with everyone and ask you to attempt the experiment. We will then look at the pilot data and discuss the experimental design.</p></li>
<li><p>In addition, this week the main assignment is to do some additional reading on the topic of recognition memory for degraded pictures.</p></li>
</ol>
<p>You can choose to read and take notes on one of these papers, or you can do a literature search to see if you can find any additional papers that manipulate picture quality (by adding noise, changing size, blurring, etc.). If you do a literature search then take notes on the new papers that you found.</p>
<p>Meng, M., &amp; Potter, M. C. (2008). Detecting and remembering pictures with and without visual noise. Journal of Vision, 8(9), 7–7. https://doi.org/10.1167/8.9.7</p>
<p>Searston, R. A., Thompson, M. B., Vokey, J. R., French, L. A., &amp; Tangen, J. M. (2019). How low can you go? Detecting style in extremely low resolution images. Journal of Experimental Psychology: Human Perception and Performance, 45(5), 573. https://doi.org/10.1037/xhp0000628</p>
<p>Wolfe, J. M., &amp; Kuzmova, Y. I. (2011). How many pixels make a memory? Picture memory for small pictures. Psychonomic Bulletin &amp; Review, 18(3), 469–475. https://doi.org/10.3758/s13423-011-0075-z</p>



 ]]></description>
  <category>Psyc 2001</category>
  <category>Pictures</category>
  <category>Recognition Memory</category>
  <guid>https://crumplab.com/psyc2001/blog/8_noisy_pictures/</guid>
  <pubDate>Mon, 23 Oct 2023 04:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/8_noisy_pictures/week8.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week 7: Literature Review and using Zotero</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/7_lit_review/</link>
  <description><![CDATA[ 




<p>This week does not involve a JsPsych assignment. Up to now we have achieved some familiarity with JsPsych by programming three demo experiments. Moving forward, the goal is to create some “real” experiments that the lab may run in the future.</p>
<p>The theme for this semester is recognition memory for pictures. In order to figure out what kind of experiments we might create, it is important to first learn more about the existing literature. So, the assignment for this week is to read the following review paper:</p>
<p>Levie, W. H., &amp; Hathaway, S. N. (1988). Picture recognition memory: A review of research and theory. Journal of Visual Verbal Languaging, 8(1), 6–45.</p>
<p>In addition, your task this week involves a few more items.</p>
<ol type="1">
<li>Get a free zotero account <a href="https://www.zotero.org" class="uri">https://www.zotero.org</a></li>
<li>Email me your zotero username, and I will add you to the group library, which contains the above review paper and several more papers on picture memory</li>
<li>Download and install zotero on your computer, and log in with your username. Once I add you to the group, when you sync your account, you should be able to see all of the articles.</li>
<li>Make a new blog post and take notes about the review paper.</li>
<li>The review paper lists many primary research papers on picture memory. Pick at least one primary research article (from the review, or from the zotero library), and read and take notes on that one as well.</li>
</ol>
<section id="zotero" class="level2">
<h2 class="anchored" data-anchor-id="zotero">Zotero</h2>
<p>I put this information together for another class, it shows basic usage of zotero:</p>
<p><a href="https://www.crumplab.com/cognition/articles/course_docs/resources.html#zotero" class="uri">https://www.crumplab.com/cognition/articles/course_docs/resources.html#zotero</a></p>


</section>

 ]]></description>
  <category>Psyc 2001</category>
  <category>Pictures</category>
  <category>Recognition Memory</category>
  <guid>https://crumplab.com/psyc2001/blog/7_lit_review/</guid>
  <pubDate>Fri, 13 Oct 2023 04:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/7_lit_review/week7.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week 6: Picture memory</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/6_picture_memory/</link>
  <description><![CDATA[ 




<p>Pre-requisites:</p>
<p>Have followed along from the previous posts.</p>
<section id="screencast" class="level2">
<h2 class="anchored" data-anchor-id="screencast">Screencast</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/-kCpvpyBE0c" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</section>
<section id="concepts-to-cover" class="level2">
<h2 class="anchored" data-anchor-id="concepts-to-cover">Concepts to cover</h2>
<p>I’ll cover the following concepts in the screencast and show how I am using software as I go along.</p>
<ul>
<li><p>Potter, M. C., &amp; Levy, E. I. (1969). Recognition memory for a rapid sequence of pictures. Journal of Experimental Psychology, 81(1), 10.</p></li>
<li><p>Programming a version of the experiment in jsPsych</p></li>
</ul>
</section>
<section id="demo-experiment" class="level2">
<h2 class="anchored" data-anchor-id="demo-experiment">Demo Experiment</h2>
<p><a href="picture.html">link to experiment</a></p>
</section>
<section id="assignment" class="level2">
<h2 class="anchored" data-anchor-id="assignment">Assignment</h2>
<ol type="1">
<li><p>Obtain the sample code from the tutorial and images. Demonstrate that you can get the experiment running on your blog.</p></li>
<li><p>Attempt to program a different manipulation that you think would influence recognition memory for pictures.</p></li>
</ol>


</section>

 ]]></description>
  <category>Psyc 2001</category>
  <category>Pictures</category>
  <category>Recognition Memory</category>
  <guid>https://crumplab.com/psyc2001/blog/6_picture_memory/</guid>
  <pubDate>Wed, 04 Oct 2023 04:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/6_picture_memory/week_6.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week 5: Analyzing data from a Stroop experiment in R</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/5_stroop_data/</link>
  <description><![CDATA[ 




<p>Pre-requisites:</p>
<p>Have followed along from the previous posts.</p>
<section id="screencast" class="level2">
<h2 class="anchored" data-anchor-id="screencast">Screencast</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/wCxfCTXyguo" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</section>
<section id="concepts-to-cover" class="level2">
<h2 class="anchored" data-anchor-id="concepts-to-cover">Concepts to cover</h2>
<p>I’ll cover the following concepts in the screencast and show how I am using software as I go along.</p>
<ul>
<li><p>piloting an experiment</p></li>
<li><p>saving data</p>
<ul>
<li>copy from the screen</li>
<li>save to csv</li>
</ul></li>
<li><p>quick R review</p>
<ul>
<li>obtaining necessary packages</li>
<li>R code chunks</li>
</ul></li>
<li><p>Scripting the analysis</p>
<ul>
<li>load the data into T</li>
<li>tidyverse pipeline to get individual subject means in all conditions</li>
<li>group means</li>
<li>plotting the data using ggplot2</li>
</ul></li>
</ul>
</section>
<section id="r-resources" class="level2">
<h2 class="anchored" data-anchor-id="r-resources">R Resources</h2>
<p>We did not spend much time introducing R. Hopefully the screencast is enough to get you started with the example scripts below.</p>
<p>Here are some additional resources for learning R.</p>
<ul>
<li><p><a href="https://www.crumplab.com/rstatsmethods/articles/Stats1/Lab1_Basics.html">Tutorials from an R statistics course</a></p></li>
<li><p><a href="https://www.crumplab.com/rstatsmethods/articles/course_docs/reference_code.html">Basic coding reference</a></p></li>
<li><p><a href="https://paulvanderlaken.com/2017/08/10/r-resources-cheatsheets-tutorials-books/">Huge list of R resources</a></p></li>
</ul>
</section>
<section id="assignment" class="level2">
<h2 class="anchored" data-anchor-id="assignment">Assignment</h2>
<ol type="1">
<li><p>Obtain the sample data from this tutorial (you can get them from the github repository for this blog). Show that you can conduct the analysis in your blog post.</p></li>
<li><p>Create pilot data from your own Stroop experiment by running yourself as a participant a few times.</p></li>
<li><p>Analyse the data in R by modifying the example scripts as necessary.</p></li>
</ol>
</section>
<section id="example-code" class="level2">
<h2 class="anchored" data-anchor-id="example-code">Example code</h2>
<p>The following example code shows some minimal examples for analyzing RT and accuracy data from a basic Stroop experiment.</p>
<section id="loading-libraries-and-importing-data" class="level3">
<h3 class="anchored" data-anchor-id="loading-libraries-and-importing-data">Loading libraries and importing data</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install from the Packages tab, or run the below in the console once.</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages('tidyverse')</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages('rio')</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load libraries</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rio)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get data file names</span></span>
<span id="cb1-10">file_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize data frame to hold individual subject data</span></span>
<span id="cb1-13">all_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>()</span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through each file and import</span></span>
<span id="cb1-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(file_names)) {</span>
<span id="cb1-17">  </span>
<span id="cb1-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import a single data file to a temporary data frame</span></span>
<span id="cb1-19">  temp_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(file_names[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subject =</span> i)</span>
<span id="cb1-21">  </span>
<span id="cb1-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append the single subject data to larger data frame</span></span>
<span id="cb1-23">  all_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(all_data,temp_df)</span>
<span id="cb1-24">  </span>
<span id="cb1-25">}</span></code></pre></div>
</div>
</section>
<section id="reaction-time-analysis" class="level3">
<h3 class="anchored" data-anchor-id="reaction-time-analysis">Reaction time analysis</h3>
<p>Goal: get individual subject mean reaction times for correct trials. Create a plot</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pre-process and filter rows</span></span>
<span id="cb2-2">filtered_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> all_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(task <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stroop"</span>,</span>
<span id="cb2-4">         correct <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRUE"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rt =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(rt))</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get individual subject means in each condition</span></span>
<span id="cb2-8">subject_mean_RT <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> filtered_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(subject,congruency) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_rt =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(rt), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>)</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get group means in each condition</span></span>
<span id="cb2-13">group_mean_RT <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> subject_mean_RT <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(congruency) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_reaction_time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(mean_rt),</span>
<span id="cb2-16">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sem =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(mean_rt)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(mean_rt))</span>
<span id="cb2-17">            )</span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot</span></span>
<span id="cb2-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(group_mean_RT, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>congruency,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>mean_reaction_time)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbar</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin=</span>mean_reaction_time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sem,</span>
<span id="cb2-23">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax=</span>mean_reaction_time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>sem),</span>
<span id="cb2-24">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mean Reaction Time (ms)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Congruency"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-539a35d47e664c97a50115a146a7f1bd-1" class="quarto-figure quarto-figure-center anchored" width="672">
<figure class="quarto-float quarto-float-fig figure">
<div>
<img src="https://crumplab.com/psyc2001/blog/5_stroop_data/index_files/figure-html/unnamed-chunk-2-1.png" id="fig-539a35d47e664c97a50115a146a7f1bd-1" class="img-fluid figure-img" width="672">
</div>
</figure>
</div>
</div>
</div>
</section>
<section id="accuracy-analysis" class="level3">
<h3 class="anchored" data-anchor-id="accuracy-analysis">Accuracy analysis</h3>
<p>Goal: get individual subject proportion correct. Create a plot</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pre-process and filter rows</span></span>
<span id="cb3-2">filtered_data_pc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> all_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(task <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stroop"</span>)</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get individual subject proportion correct values</span></span>
<span id="cb3-6">subject_pc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> filtered_data_pc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(subject,congruency) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">proportion_correct =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(correct), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>)</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get group means in each condition</span></span>
<span id="cb3-11">group_mean_pc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> subject_pc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(congruency) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_proportion_correct =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(proportion_correct),</span>
<span id="cb3-14">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sem =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(proportion_correct)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(proportion_correct))</span>
<span id="cb3-15">            )</span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot</span></span>
<span id="cb3-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(group_mean_pc, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>congruency,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>mean_proportion_correct)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbar</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin=</span>mean_proportion_correct<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sem,</span>
<span id="cb3-21">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax=</span>mean_proportion_correct<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>sem),</span>
<span id="cb3-22">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mean Proportion Correct"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Congruency"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-539a35d47e664c97a50115a146a7f1bd-2" class="quarto-figure quarto-figure-center anchored" width="672">
<figure class="quarto-float quarto-float-fig figure">
<div>
<img src="https://crumplab.com/psyc2001/blog/5_stroop_data/index_files/figure-html/unnamed-chunk-3-1.png" id="fig-539a35d47e664c97a50115a146a7f1bd-2" class="img-fluid figure-img" width="672">
</div>
</figure>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>Psyc 2001</category>
  <category>Stroop</category>
  <category>R</category>
  <guid>https://crumplab.com/psyc2001/blog/5_stroop_data/</guid>
  <pubDate>Wed, 27 Sep 2023 04:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/5_stroop_data/week5.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week 4: Programming a Stroop experiment in JsPsych</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/4_stroop/</link>
  <description><![CDATA[ 




<p>Pre-requisites:</p>
<p>Have followed along from the previous posts.</p>
<section id="part-1-basic-stroop" class="level2">
<h2 class="anchored" data-anchor-id="part-1-basic-stroop">Part 1: Basic Stroop</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/zH9LrcIHIIc" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</section>
<section id="part-2-using-a-script-to-generate-a-stimulus-array" class="level2">
<h2 class="anchored" data-anchor-id="part-2-using-a-script-to-generate-a-stimulus-array">Part 2: Using a script to generate a stimulus array</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/DpTOheveByc" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</section>
<section id="concepts-to-cover" class="level2">
<h2 class="anchored" data-anchor-id="concepts-to-cover">Concepts to cover</h2>
<p>I’ll cover the following concepts in the screencast and show how I am using software as I go along.</p>
<ul>
<li>What is a Stroop Experiment?</li>
</ul>
<p>Readings:</p>
<p>Logan, G. D., &amp; Zbrodoff, N. J. (1998). Stroop-type interference: Congruity effects in color naming with typewritten responses. Journal of Experimental Psychology: Human Perception and Performance, 24(3), 978–992. https://doi.org/10.1037/0096-1523.24.3.978</p>
<p>MacLeod, C. M. (1991). Half a century of research on the Stroop effect: An integrative review. Psychological Bulletin, 109(2), 163. https://doi.org/10.1037/0033-2909.109.2.163</p>
<ul>
<li><p>Programming a basic Stroop experiment in JsPsych from scratch</p></li>
<li><p>Additional considerations</p>
<ul>
<li>Elements around the main experiment
<ul>
<li>welcoming people, explaining the task, making sure they understand, giving feedback, debriefing them.</li>
</ul></li>
<li>Design considerations:
<ul>
<li>different response modalities (button press vs.&nbsp;typing vs.&nbsp;voice key)</li>
<li>Proportion manipulations</li>
<li>sequence manipulations</li>
</ul></li>
</ul></li>
</ul>
<section id="links-to-example-code" class="level3">
<h3 class="anchored" data-anchor-id="links-to-example-code">Links to example code</h3>
<p>Remember, you can view the source code from github repository for this website.</p>
<p><a href="stroop.html">Basic stroop example</a></p>
<p><a href="stroop_2.html">Second Stroop example</a></p>
</section>
</section>
<section id="assignment" class="level2">
<h2 class="anchored" data-anchor-id="assignment">Assignment</h2>
<ol type="1">
<li><p>Demonstrate that you can get the Stroop tutorial example working on your Quarto blog. Feel free to attempt writing your own version of a Stroop experiment from scratch, this is the best way to learn. For this course, and at this stage, it is also fine if you obtain my example code and demonstrate that you can get it working on your quarto blog (e.g., produce a link that runs the experiment.)</p></li>
<li><p>Brainstorm a manipulation that you think might change the size of the Stroop effect. For example, would making the color words bigger make it even harder to ignore the words, and therefore produce a larger Stroop effect (compared to trials where the words were much smaller and harder to read, and therefore easier to ignore)?</p></li>
<li><p>Produce a version of the Stroop experiment that deploys your manipulation. In the example above, you would need to have some trials where the word appears in a small font and others where it appears in a large font.</p></li>
</ol>
<section id="advanced" class="level3">
<h3 class="anchored" data-anchor-id="advanced">Advanced</h3>
<p>We will cover data analysis next week, but if you want to find out whether your manipulation worked, then you will need to analyze your data in each condition. See if you can find a way to do this. Did your manipulation succesfully cause a change in the size of the Stroop effect?</p>


</section>
</section>

 ]]></description>
  <category>Psyc 2001</category>
  <category>jspsych</category>
  <guid>https://crumplab.com/psyc2001/blog/4_stroop/</guid>
  <pubDate>Tue, 19 Sep 2023 04:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/4_stroop/week4.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week 3: JsPsych and the simple reaction time tutorial</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/3_jspsych_tutorial/</link>
  <description><![CDATA[ 




<p>Pre-requisites:</p>
<p>Have followed along from the previous posts</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/9IhmZbnQJJQ" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<section id="concepts-to-cover" class="level2">
<h2 class="anchored" data-anchor-id="concepts-to-cover">Concepts to cover</h2>
<p>I’ll cover the following concepts in the screencast and show how I am using software as I go along.</p>
<ul>
<li>What is JsPsych?
<ul>
<li>Overview of the <a href="https://www.jspsych.org/7.3/">JsPsych documentation</a> website</li>
</ul></li>
<li>Getting JsPsych on your computer
<ul>
<li>downloading the <a href="https://github.com/jspsych/jsPsych">library from github</a></li>
<li>Or, using links</li>
</ul></li>
<li>Simple reaction time tasks
<ul>
<li>Donders and subtractive logic</li>
<li>Reading: <a href="https://www.crumplab.com/cognition/textbook/C7_Information_Processing.html#donders-processing-stages" class="uri">https://www.crumplab.com/cognition/textbook/C7_Information_Processing.html#donders-processing-stages</a></li>
</ul></li>
<li>Walkthrough of the JsPsych simpleRT demo.</li>
</ul>
<section id="example-of-showing-the-code-works" class="level3">
<h3 class="anchored" data-anchor-id="example-of-showing-the-code-works">Example of showing the code works</h3>
<p><a href="test.html">Link to test.html</a></p>
</section>
</section>
<section id="assignment" class="level2">
<h2 class="anchored" data-anchor-id="assignment">Assignment</h2>
<ol type="1">
<li><p>Show that you can get the JsPsych simple RT demo working and posted to your blog. You should be able to do this based on following along with the documentation and the screencast.</p></li>
<li><p>Generalize: The reading about Donder’s concept of processing stages discussed three kinds of tasks</p></li>
</ol>
<ol type="a">
<li>A basic detection task</li>
<li>A Go/NO-GO task</li>
<li>A choice reaction time task</li>
</ol>
<p>Your assignment is to attempt to produce scripts for each of these tasks by modifying the example simple RT demo script.</p>
<section id="advanced" class="level3">
<h3 class="anchored" data-anchor-id="advanced">Advanced</h3>
<p>If you are looking for an advanced challenge, then attempt the following.</p>
<p>A researcher may want to conduct the above 3 different versions of a reaction time task for the same participant. Produce a script that presents each task one after the other.</p>
<p>Additionally, a researcher may want to control or randomize the sequence of each task. Produce a script that randomizes task order.</p>


</section>
</section>

 ]]></description>
  <category>Psyc 2001</category>
  <category>jspsych</category>
  <guid>https://crumplab.com/psyc2001/blog/3_jspsych_tutorial/</guid>
  <pubDate>Mon, 11 Sep 2023 04:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/3_jspsych_tutorial/week3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week 2: Really Basic HTML and Javascript</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/2_Basic_web/</link>
  <description><![CDATA[ 




<p>Pre-requisites:</p>
<p>This post assumes that you have a quarto blog up and running (see last post).</p>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>The purpose of this week is to make sure we understand some very basic web programming concepts before attempting to code cognitive psych experiments with jsPsych.</p>
<p>If you already have experience coding for the web, that’s great, and this may be a review for you.</p>
</section>
<section id="software" class="level2">
<h2 class="anchored" data-anchor-id="software">Software</h2>
<p>You should already have R Studio and R installed, as well as Github desktop. We will be using these tools throughout the course.</p>
<p>To program for the web you really only need a text editor (to write the code), and web-browser (to check that it works). We will use the text editor inside R studio (it’s totally fine if you want to use a different one). My preferred web-browser for debugging code is <a href="https://www.mozilla.org/en-US/firefox/new/">firefox</a>. Google chrome is fine too. Safari for mac is OK.</p>
</section>
<section id="concepts-to-cover" class="level2">
<h2 class="anchored" data-anchor-id="concepts-to-cover">Concepts to cover</h2>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/bzFZtsc4Wl4" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>I’ll cover the following concepts in the screencast, and show how I am using software as I go along.</p>
<ul>
<li><p>What is HTML? What kind of file is it?</p></li>
<li><p>Web-browser as a compiler that interprets HTML code and displays it as a web page</p></li>
<li><p>Basic anatomy of an HTML file</p></li>
<li><p>Adding HTML elements to the body</p>
<ul>
<li>see <a href="https://www.w3schools.com/html/default.asp">w3schools</a></li>
</ul></li>
<li><p>What is Javascript?</p></li>
<li><p>Web-browser as a javascript compiler that executes javascript code</p></li>
<li><p>Javascript control over HTML elements (changing webpages with javascript, recording webpage interactions with javascript)</p></li>
</ul>
<p><a href="test.html">Link to text.html</a></p>
</section>
<section id="assignment" class="level2">
<h2 class="anchored" data-anchor-id="assignment">Assignment</h2>
<p>Create your own basic html file. Explore the process of adding different kinds of html elements to it. See if you can program some kind of javascript interaction, even if it is super simple (e.g., like pressing a button changes something on the website).</p>
<p>Add your html file to your blog post so that it is viewable from your blog, and so that the code is viewable from github.</p>
<section id="example-assignment-ideas" class="level3">
<h3 class="anchored" data-anchor-id="example-assignment-ideas">Example assignment ideas</h3>
<p>In a couple weeks we will be making a Stroop experiment demo. Part of this experiment requires being able to present words one at a time in different colors.</p>
<p>These are some example stimuli:</p>
<p><img src="https://crumplab.com/psyc2001/blog/2_Basic_web/Stroop.png" class="img-fluid"> Consider how you would use basic javascript and a button to achieve the following result:</p>
<ol type="1">
<li>Every time you click the button a new Stroop item is displayed on the screen.</li>
</ol>
<p>We will do this later using jsPsych, but it can be instructive to figure out how to solve problems using basic javascript and html.</p>


</section>
</section>

 ]]></description>
  <category>Psyc 2001</category>
  <category>jspsych</category>
  <guid>https://crumplab.com/psyc2001/blog/2_Basic_web/</guid>
  <pubDate>Tue, 05 Sep 2023 04:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/2_Basic_web/Basic.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Week 1: Installing software and getting your Quarto Blog working</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://crumplab.com/psyc2001/blog/1_Getting_started/</link>
  <description><![CDATA[ 




<p>Hi Everyone,</p>
<p>As we discussed in our meeting a goal for this week is for everyone to get a Quarto blog up and running. You will use this blog throughout the semester as a lab journal. Every week this blog will be a place where you place your work (along with making notes for yourself about what you are doing).</p>
<p>We will use R, R Studio, Quarto, and Github to create the blog. These very same tools will be used for several other purposes including coding experiments and analyzing data from them.</p>
<p>This post contains instructions for getting a quarto blog up and running. If you can’t get something to work and have spend more than 30 minutes trying to solve the problem, then please email me and I will help you!</p>
<section id="setting-up-your-quarto-blog" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-your-quarto-blog">Setting up your quarto blog</h2>
<p>I wrote a blog post about how to do this a year ago. Here is the link. All of the steps should still work. The blog post has a video walk through that should be helpful as well.</p>
<p><a href="https://www.crumplab.com/blog/post_887_8_25_22_quartoblog/" class="uri">https://www.crumplab.com/blog/post_887_8_25_22_quartoblog/</a></p>
</section>
<section id="make-a-first-post" class="level2">
<h2 class="anchored" data-anchor-id="make-a-first-post">Make a first post</h2>
<p>If you get everything working then you should be able to create new posts and delete the example posts. Make at least one new post to demonstrate for yourself that it works.</p>
<p>I find blogging very helpful for learning new skills. For example, I’ll often use a blog post as a scratch pad to take notes or make observations about something that I’m trying to learn about. These notes often become helpful for me later on. I suggest that you write a blog post that contains notes about setting up your blog. This could include questions you have, notes about something that didn’t work, or ideas for things about the site you might want to change later.</p>
</section>
<section id="send-me-your-github-repo" class="level2">
<h2 class="anchored" data-anchor-id="send-me-your-github-repo">Send me your github repo</h2>
<p>If you get everything working, then you will have a github repository for your blog. Please send me the URL for this repository once you have it. We will be sharing code over github throughout this course.</p>
<p>For example, the github repo for this course website is:</p>
<p><a href="https://github.com/CrumpLab/psyc2001" class="uri">https://github.com/CrumpLab/psyc2001</a></p>
</section>
<section id="feel-free-to-poke-around-quarto" class="level2">
<h2 class="anchored" data-anchor-id="feel-free-to-poke-around-quarto">Feel free to poke around Quarto</h2>
<p>The documentation for quarto is available here:</p>
<p><a href="https://quarto.org" class="uri">https://quarto.org</a></p>
<p>There is much more to quarto than making blogs, so feel free to poke around in the documentation to see what it can do.</p>


</section>

 ]]></description>
  <guid>https://crumplab.com/psyc2001/blog/1_Getting_started/</guid>
  <pubDate>Thu, 31 Aug 2023 04:00:00 GMT</pubDate>
  <media:content url="https://crumplab.com/psyc2001/blog/1_Getting_started/quarto.png" medium="image" type="image/png" height="144" width="144"/>
</item>
</channel>
</rss>
